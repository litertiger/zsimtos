<HTML>
<head>
<meta http-equiv="content-type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="temp1.css" type="text/css">
</head>
<body bgcolor=#ffffff vlink=#0000ff>

<br><b><font size=4>Properties</font></b><br>
<table width=100% border=1 align="center" cols=6>
<tr bgcolor=#e4e4e4><td colspan=6>含义: Freeform属性；数量: 0-1</td></tr>
<tr bgcolor=#f1f1f1><td colspan=2>属性名称</td><td>含义</td><td>可用值</td><td>默认值</td><td>示例</td></tr>
<tr><td colspan=2 rowspan=2>id</td><td>Freeform的ID</td><td>id串</td><td rowspan=2>(无)</td><td rowspan=2>&nbsp;</td></tr>
<tr><td colspan=2 bgColor=#ffffdd>注: 用于GetChangedXML函数生成XML串，相当于是告诉应用服务器，当前提交的是什么表单</td></tr>
<tr><td colspan=2 rowspan=2>key</td><td>主键</td><td>是object的id, 如果是复合主键必须以逗号分隔</td><td rowspan=2>(无)</td><td rowspan=2>&nbsp;</td></tr>
<tr><td colspan=2 bgColor=#ffffdd>注: 用于GetChangedXML函数生成XML串</td></tr>
<tr><td colspan=2>dataURL</td><td>数据的URL</td><td>绝对或相对URL(相对本XML), 如果指定了该URL, 执行Build( )后将自动加载数据</td><td>(无)</td><td>&nbsp;</td></tr>
<tr><td colspan=2>bgColor 或 backColor</td><td>背景色</td><td>颜色串，也可以是以逗号分隔的2个颜色(渐变填充), 建议写在&lt;Background&gt;中，此处为兼容老版本</td><td>(无)</td><td>
<img src="document.bmp" title="请参见演示页: 1.体验Freeform"></td></tr>
<tr><td colspan=2 rowspan=2>editAble</td><td>是否允许Edit(输入)</td><td>true/false</td><td rowspan=2>true</td><td rowspan=2>&nbsp;</td></tr>
<tr><td colspan=2 bgColor=#ffffdd>注: 如果是false，那么所有input都将仅显示、无法输入</td></tr>
<tr><td colspan=2>leftMost</td><td>输入框内光标位于最左侧时, 向左键的行为</td><td><b>none</b> - 无动作;<br><b>prior</b> - 跳转到前一个输入框;</td><td>none</td><td>&nbsp;</td></tr>
<tr><td colspan=2>rightMost</td><td>输入框内光标位于最右侧时, 向右键的行为</td><td><b>none</b> - 无动作;<br><b>next</b> - 跳转到下一个输入框;</td><td>none</td><td>&nbsp;</td></tr>
<tr><td colspan=2>HiLightUnNullable 或 HighLightUnNullable</td><td>是否在nullable="false"的输入控件加醒目的提示</td><td><b>true</b> - 在输入框右侧显示红色*号;<br><b>false</b> - 无任何醒目标记;<br><b>短句"text=?;color=?"</b> - 在输入框右侧以某个颜色显示一个自定义的串;<br><b>短句"leftTextColor=?"</b> - 左侧文字以某颜色显示;</td><td>false</td><td>
<img src="document.bmp" title="请参见演示页: 8.有表头表体的表单(1)"></td></tr>
<tr><td colspan=2 rowspan=2>DropDataLoadMode</td><td>下拉数据的加载模式</td><td>asynch/synch - 异步/同步</td><td rowspan=2>asynch</td><td rowspan=2>
<img src="document.bmp" title="请参见演示页: 3.多种下拉"></td></tr>
<tr><td colspan=2 bgColor=#ffffdd>注1: "下拉数据"即&lt;Droplists&gt;下的需要加载外部数据的所有下拉资源;<br>注2: 数据异步加载后，会触发 DropDownDataReach 事件;<br></td></tr>
<tr><td colspan=2>isSelectEditWhenFocus</td><td>当输入框取得焦点时，光标是否选中全部文字</td><td><b>true</b> - 全选;<br><b>false</b> - 不选;<br><b>auto</b> - 自动, 表示数据类型为int或double时全选;</td><td>auto</td><td>&nbsp;</td></tr>
<tr><td colspan=2>innerShadow</td><td>内凹陷阴影</td><td>请参见Treelist的同名属性</td><td>(无)</td><td>&nbsp;</td></tr>
<tr><td colspan=2 rowspan=2>自定义属性</td><td>自定义属性</td><td>符合变量命名的任意串, 不和上述属性重名即可</td><td rowspan=2>(无)</td><td rowspan=2>&nbsp;</td></tr>
<tr><td colspan=2 bgColor=#ffffdd>注: 可定义多个自定义属性, GetChangedXML( )、 Export( )函数输出的XML中将包含自定义属性, 您也可以用SetProp( )、GetProp( )函数存取自定义属性</td></tr></table>

<br><br><br><br>
<script type='text/javascript' src='nstd.js'></script>
</body></html>