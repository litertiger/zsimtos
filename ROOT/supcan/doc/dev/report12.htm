<HTML>
<head>
<meta http-equiv="content-type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="temp1.css" type="text/css">
</head>
<body bgcolor=#ffffff vlink=#0000ff>
<br>
<p class="sz1">12.事件</p><hr color=#2266ee size=1>
　　Supcan Report的OnEvent( id, Event, p1, p2, p3, p4 )事件含义及参数分别如下：<br>

<table width=98% border=1 align="center">
<tr><th>分类</th><th>Event</th><th>含义</th><th>p1</th><th>p2</th><th>p3</th><th>p4</th></tr>
<tr>
  <td rowspan="33">键盘鼠标动作</td>
  <td rowspan="2">SelChanged</td>
  <td>选中了单元格</td>
  <td>行号</td>
  <td>列号</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>选中了内嵌对象</td>
  <td>别名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>

<tr>
  <td rowspan="8">Clicked</td>
  <td rowspan="2">鼠标点到某单元格</td>
  <td>行号</td>
  <td>列号</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：如果是交叉表, 可以继续用 GetCellProp 函数获取该单元格的 crosstabRowDir、crosstabColDir 属性, 即所在的交叉项</td></tr>
<tr>
  <td rowspan="2">鼠标点在单元格右侧的按钮上</td>
  <td>行号</td>
  <td>列号</td>
  <td>RightButton</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：请参见函数 SetCellProp/GetCellProp</td></tr>
<tr>
  <td>鼠标点到某统计图</td>
  <td>统计图别名</td>
  <td>系列名</td>
  <td>数据项名</td>
  <td>数据所在的单元格名称<br>如果是多工作表, 则在后面跟随有类似 "@sheet1" 的宏</td></tr>
<tr>
  <td>鼠标点到某内嵌对象</td>
  <td>别名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">鼠标点在某内嵌对象右侧的按钮上</td>
  <td>别名</td>
  <td>　</td>
  <td>RightButton</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：请参见函数 SetCellProp/GetCellProp</td></tr>

<tr>
  <td rowspan="2">Clicked<br>(超链接的兼容模式, 见<a href="#TagCompatible">备注5</a>)</td>
  <td>鼠标点到某超链接的单元格</td>
  <td>行号</td>
  <td>列号</td>
  <td>超链接的标识文字</td>
  <td>数据源超链接的列ID (如果是数据源的超链接)</td></tr>
<tr>
  <td>鼠标点到定义了超链接的交叉表的单元格</td>
  <td>行号</td>
  <td>列号</td>
  <td>Crosstab</td>
  <td>交叉表中该值的“副标题文字”</td></tr>

<tr>
  <td rowspan="8">HyperLink<br>超链接事件</td>
  <td>鼠标点到某超链接的单元格</td>
  <td>行号</td>
  <td>列号</td>
  <td>超链接的标识文字</td>
  <td>数据源超链接的列ID (如果是数据源的超链接)</td></tr>
<tr>
  <td>交叉表单元格的超链接</td>
  <td>行号</td>
  <td>列号</td>
  <td>Crosstab</td>
  <td>交叉表中该值的“副标题文字”</td></tr>
<tr>
  <td rowspan="2">将跳转到另一个工作表</td>
  <td>行号</td>
  <td>列号</td>
  <td>go</td>
  <td>工作表名</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td rowspan="2">将跳转到另一个工作表并对其执行计算</td>
  <td>行号</td>
  <td>列号</td>
  <td>goCalc</td>
  <td>工作表名</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td rowspan="2">将计算所有工作表</td>
  <td>行号</td>
  <td>列号</td>
  <td>calc</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>

<tr>
  <td rowspan="2">DblClicked</td>
  <td>鼠标双击某单元格</td>
  <td>行号</td>
  <td>列号</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>

<tr>
  <td rowspan="4">EditChanged</td>
  <td rowspan="2">单元格内容被修改</td>
  <td>行号</td>
  <td>列号</td>
  <td>输入前的内容</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注1：通常是输入框关闭(焦点离开)后才触发该事件的;<br>备注2：在执行粘贴(Paste)时，也会触发该事件，每个单元格都会触发一遍, 如果您执行了 CancelEvent 函数，那么粘贴过程将终止</td></tr>
<tr>
  <td rowspan="2">文本框内容被修改</td>
  <td>别名</td>
  <td>　</td>
  <td>输入前的内容</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：通常是输入框关闭(焦点离开)后才触发该事件的</td></tr>
<tr>
  <td rowspan="4">Editing</td>
  <td rowspan="2">正打开着的单元格的输入框内容有变</td>
  <td>行号</td>
  <td>列号</td>
  <td>当前内容串</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：在输入过程中，输入内容并不会立即更新到单元格中</td></tr>
<tr>
  <td rowspan="2">正打开着的文本框的输入框内容有变</td>
  <td>别名</td>
  <td>　</td>
  <td>当前内容串</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="4">备注：在输入过程中，输入内容并不会立即更新到单元格中</td></tr>
<tr>
  <td rowspan="2">Keydown</td>
  <td>在非编辑状态时的键盘动作</td>
  <td>　</td>
  <td>　</td>
  <td>键的ASCII码，例如回车是13、空格是32</td>
  <td>见备注2</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注1：可执行全局函数CalcelEvent( )阻止继续执行<br>备注2：p4的含义为: 1-Ctrl键也按下了； 2-Shift键也按下了； 3-二者一起按下了</td></tr>
<tr>
  <td>Checked</td>
  <td>鼠标选了Checkbox</td>
  <td>行号</td>
  <td>列号</td>
  <td>Checkbox的值(1/0)</td>
  <td>&nbsp;</td></tr>
  
  
  
<tr>
  <td rowspan="8">文件IO事件</td>
  <td rowspan="2">New</td>
  <td>报表已新建 (即点击了工具条左上角第一个按钮)</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注："Toolbar" 事件发生在新建前; "New" 事件发生在新建后</td></tr>  
<tr>
  <td>Opened</td>
  <td>已打开报表</td>
  <td>报表的URL, 也可能是纯数字串形式的内存块句柄(可用全局函数 GetDataString 访问)</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>Saved</td>
  <td>报表已保存</td>
  <td>本地的全文件名</td>
  <td>如果一开始打开的是zip文件，则为该zip文件名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>Exported</td>
  <td>报表已转换输出</td>
  <td>全文件名(多个文件以逗号分隔)</td>
  <td>文件类型(即后缀)</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="3">ExportDialog</td>
  <td>转换输出对话框中，当用户点击"确定"后、文件对话框即将弹出前</td>
  <td>文件后缀</td>
  <td>以逗号分隔的、待转换的工作表序号(从0开始计数)</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可以在该事件中执行 SetExportFilename 函数，详见该函数的说明.</td></tr>



<tr>
  <td rowspan="8">行列增删</td>
  <td>RowInserted</td>
  <td>行已插入</td>
  <td>行号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>BeforeRowInserted</td>
  <td>行插入前</td>
  <td>行号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>RowDeleted</td>
  <td>行已删除</td>
  <td>行号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>BeforeRowDeleted</td>
  <td>行删除前</td>
  <td>行号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>ColInserted</td>
  <td>列已插入</td>
  <td>列号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>BeforeColInserted</td>
  <td>列插入前</td>
  <td>列号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>ColDeleted</td>
  <td>列已删除</td>
  <td>列号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>BeforeColDeleted</td>
  <td>列删除前</td>
  <td>列号</td>
  <td>数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
  
  



<tr>
  <td rowspan="16">工具条和工具箱</td>
  <td rowspan="2">Toolbar</td>
  <td>鼠标点击了工具条中的某按钮、但尚未执行</td>
  <td>功能号</td>
  <td>参数，和功能号有关</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td rowspan="2">ToolbarRun</td>
  <td>鼠标点击了工具条中的某按钮、且已成功执行</td>
  <td>功能号</td>
  <td>参数，同 Toolbar 事件</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：如果某些功能是需要弹出对话框确认的，那么点击对话框的 “取消” 是不会触发本事件的，此外，如果功能没有得到执行时，也不触发本事件</td></tr>
<tr>
  <td rowspan="2">BeforeCellPropChanged</td>
  <td>工具箱中单元格的某些属性被改动前</td>
  <td>单元格名</td>
  <td>属性名称</td>
  <td>修改前的内容</td>
  <td>修改后的内容</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注1：可执行全局函数CalcelEvent( )阻止继续执行;<br>备注2：并不是所有属性都会触发该事件，只有常用的属性诸如颜色、保护、对齐等等才触发</td></tr>
<tr>
  <td>CellPropChanged</td>
  <td>工具箱中单元格的某些属性已被改动</td>
  <td>单元格名</td>
  <td>属性名称</td>
  <td>修改前的内容</td>
  <td>修改后的内容</td></tr>
<tr>
  <td rowspan="2">BeforeFunctionDrag</td>
  <td>工具箱中 “函数” 选项卡中，某函数被拖拽到单元格前</td>
  <td>单元格名</td>
  <td>函数名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
  <tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>FunctionDrag</td>
  <td>工具箱中 “函数” 选项卡中，某函数被拖拽到单元格后</td>
  <td>单元格名</td>
  <td>函数名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">BeforeDSDrag</td>
  <td>工具箱中 “数据源” 选项卡中，某函数被拖拽到单元格前</td>
  <td>单元格名</td>
  <td>函数名</td>
  <td>逗号分隔的参数</td>
  <td>&nbsp;</td></tr>
  <tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>DSDrag</td>
  <td>工具箱中 “数据源” 选项卡中，某函数被拖拽到单元格后</td>
  <td>单元格名</td>
  <td>函数名</td>
  <td>逗号分隔的参数</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">BeforeItemDrag</td>
  <td>工具箱中 “指标库” 选项卡中，某指标被拖拽到单元格前</td>
  <td>单元格名, 如果为空表示是拖拽成文本框</td>
  <td>指标名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
  <tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>ItemDrag</td>
  <td>工具箱中 “指标库” 选项卡中，某指标被拖拽到单元格后</td>
  <td>单元格名, 如果为空表示是拖拽成文本框</td>
  <td>指标名</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>



  
<tr>
  <td rowspan="12">工作表</td>
  <td>WorkSheetSelChanged</td>
  <td>当前工作表已切换</td>
  <td>工作表序号</td>
  <td>0 - 普通鼠标点击时切换;<br>1 - 报表刚打开时自动触发本事件</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">BeforeSheetDeleted</td>
  <td>工作表被删除前</td>
  <td>工作表序号</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>SheetDeleted</td>
  <td>工作表已经被删除</td>
  <td>工作表序号</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">BeforeSheetRenamed</td>
  <td>工作表被改名前</td>
  <td>工作表序号</td>
  <td>原名</td>
  <td>新名</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>SheetRenamed</td>
  <td>工作表已经被改名</td>
  <td>工作表序号</td>
  <td>原名</td>
  <td>新名</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="3">BeforeSheetInserted<br>(点击了选项卡 <img src="image/report22.bmp">)</td>
  <td>工作表新建前</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>新工作表导入前</td>
  <td>报表的URL</td>
  <td>工作表数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
</tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td rowspan="2">SheetInserted<br>(点击了选项卡 <img src="image/report22.bmp">)</td>
  <td>新建了工作表</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>导入了新工作表</td>
  <td>报表的URL</td>
  <td>工作表数量</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
</tr>
  
  
<tr>
  <td rowspan="7">打印相关</td>
  <td rowspan="2">BeforePrint</td>
  <td>正准备要打印 (在预览界面)</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>Printed</td>
  <td>已打印<br>(是指打印任务已经发送给操作系统的打印任务队列)</td>
  <td>已打印次数</td>
  <td>0 - 普通打印;<br>1 - 在预览窗口中的打印当前页;<br>2 - 在预览窗口中的打印全部页;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>Previewed</td>
  <td>打印预览窗口已关闭</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">PrintSetupBeforeUpdate</td>
  <td>打印参数设置对话框已经按下"确认", 但尚未更新到报表</td>
  <td>即将要更新的新的配置串(XML串)</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注：可执行全局函数CalcelEvent( )阻止继续执行</td></tr>
<tr>
  <td>PrintSetupUpdated</td>
  <td>打印参数设置对话框已经按"确认"关闭, 并且已经更新到报表</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
  
  
<tr>
  <td rowspan="3">计算相关</td>
  <td>Calced</td>
  <td>已执行计算</td>
  <td>0 - 执行了工具条上的“重新计算”;<br>1 - 执行了"除数据源外，重新计算";<br>2 - API执行了计算函数;<br>3 - API执行了当前工作表的计算</td>
  <td>0 - 是同步计算<br>1 - 是异步计算<br><br>注：工具条上的“计算”按钮是异步计算</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">DataReach</td>
  <td>数据源已经访问了http并得到了数据，但尚未应用该数据</td>
  <td>纯数字串形式的内存块的句柄</td>
  <td>URL</td>
  <td>数据源的ID, 如"ds1"</td>
  <td>&nbsp;</td></tr>
<tr bgColor=#ffffdd><td colspan="5">备注1：可以用全局函数 GetDataString / SetDataString 取得或更改内存块中的数据<br>备注2：可以用上述2个函数存取数据，但不宜过多调用其它函数，否则会造成不稳定</td></tr>


<tr>
  <td rowspan="10">其它</td>
  <td>HotKey</td>
  <td>触发了快捷键</td>
  <td>快捷键</td>
  <td>如果当前选中的是单元格，为所在行号; <br>如果是内嵌对象，则为它的别名</td>
  <td>当前单元格的列号, 如果有单元格选中的话</td>
  <td>&nbsp;</td></tr>
<tr>
  <td rowspan="2">MenuBeforePopup</td>
  <td>右键菜单即将弹出(单元格)</td>
  <td>行号</td>
  <td>列号</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>右键菜单即将弹出(文本框/统计图/图片等)</td>
  <td>别名，多个别名间以逗号分隔</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>MenuClicked</td>
  <td>右键菜单的自定义部分被选中</td>
  <td>功能号</td>
  <td>行号</td>
  <td>列号</td>
  <td>&nbsp;</td></tr>
 
<tr>
  <td>UserEvent</td>
  <td>全局函数 PostMessage 发出的自定义事件</td>
  <td>自定义</td>
  <td>自定义</td>
  <td>自定义</td>
  <td>自定义</td></tr>
<tr>
  <td>CacheSaved</td>
  <td>全局事件，请参见全局函数 ListenEvent</td>
  <td>缓存的ID</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>Download</td>
  <td>全局事件，请参见Freeform组件的同名事件</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>Upload</td>
  <td>全局事件，请参见Freeform组件的同名事件</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td></tr>
<tr>
  <td>树列表别名.树列表事件名</td>
  <td>内嵌树列表的事件</td>
  <td>参见树列表</td>
  <td>参见树列表</td>
  <td>参见树列表</td>
  <td>参见树列表</td></tr>
</table>
<br>

<b>备注1</b>：行列增删“前”的4个事件(BeforeRowInserted、BeforeColInserted、BeforeRowDeleted、BeforeColDeleted)，是用户交互过程中触发的，增删行列的函数是不会触发该事件的；<br>
<b>备注2</b>：在行列增删“前”事件、以及BeforeCellPropChanged事件中，你可以通过全局函数 CancelEvent 去阻止下一步的行列增删动作，如下例：<br>
<pre class='cpp'>
function OnEvent(id, Event, p1, p2, p3, p4)
{
 if(Event == "BeforeRowInserted") {
  AF.func("CancelEvent", "");  //阻止插入行
 }
}</pre>
<b>备注3</b>：<font color=red>SelChanged、Clicked、DblClicked 和 EditChanged、Editing、CellPropChanged</font>事件需要SubscribeEvent( )预订才会生效, 事件的js用法可参见下例：<br>
<pre class='cpp'>
function OnReady( id )
{
 AF.func( 'Build', 'index.XML' );　　　　　//加载报表
 AF.func("SubscribeEvent", "SelChanged, EditChanged");　　//预订事件
}
function OnEvent(id, Event, p1, p2, p3, p4)
{
 if( Event == "SelChanged" ) {
  //...略
 }
}</pre>
<b>备注4</b>：Checked事件必须要先预订 Clicked 事件才能生效；<br>
<br>
<div id="TagCompatible"/>
<b>备注5</b>：关于超链接事件, 在1.0.101.0前, 都是和 "Clicked" 事件同名的, 在1.0.101.0版本后, 超链接允许设置多种行为方案了, 在工具箱超链接的输入处右侧有一个小按钮, 点击后会弹出一个对话框:<br>
<center><img src='image/report24.png'></center>
　　您可以在此选择, 其中第一个是兼容模式, 用于和以前版本兼容, 即触发 Clicked 事件还是打开 URL, 取决与您是否预订了 Clicked 事件.<br>
　　第二个 “打开这个 URL” 是不触发页面事件的, 它将直接打开新的页面.<br>
　　其余 4 种模式将触发 "HyperLink" 事件, 不再触发 "Clicked" 事件.<br>
<br>

<br><br><br>
<script type='text/javascript' src='nstd.js'></script>
</body></html>