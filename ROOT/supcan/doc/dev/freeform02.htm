<HTML>
<head>
<meta http-equiv="content-type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="temp1.css" type="text/css">
</head>
<body bgcolor=#ffffff vlink=#0000ff>
<br>
<p class="sz1">2.函数</p><hr color=#2266ee size=1>
　　Supcan FreeForm的函数是通过插件/加载项的 func( string funcname, string paras ) 函数间接调用的，Supcan FreeForm组件的可用funcname及用途说明如下:<br>
<table width="94%" border="1" align="center">
<tr><th>分类</th><th>函数名</th><th>用途</th></tr>
<tr><td rowspan=11>基本</td><td><a href="#TagFuncTableBuild"><div id="func_TagFuncTableBuild"/>Build</a></td><td>根据XML描述文件创建Freeform</td></tr>
<tr><td><a href="#TagFuncTableLoad(含义1)"><div id="func_TagFuncTableLoad(含义1)"/>Load(含义1)</a></td><td>加载数据</td></tr>
<tr><td><a href="#TagFuncTableBindAsMaster"><div id="func_TagFuncTableBindAsMaster"/>BindAsMaster</a></td><td>共享Treelist加载的XML/JSON数据</td></tr>
<tr><td><a href="#TagFuncTableGetProp"><div id="func_TagFuncTableGetProp"/>GetProp</a></td><td>取得属性</td></tr>
<tr><td><a href="#TagFuncTableSetProp"><div id="func_TagFuncTableSetProp"/>SetProp</a></td><td>更改属性</td></tr>
<tr><td><a href="#TagFuncTableGetHandle"><div id="func_TagFuncTableGetHandle"/>GetHandle</a></td><td>取得Freeform或其它内部对象的句柄</td></tr>
<tr><td><a href="#TagFuncTableRecover"><div id="func_TagFuncTableRecover"/>Recover</a></td><td>将数据恢复到输入前的初始状态</td></tr>
<tr><td><a href="#TagFuncTableGetObjectId"><div id="func_TagFuncTableGetObjectId"/>GetObjectId</a></td><td>取得第n个对象(Object)的ID</td></tr>
<tr><td><a href="#TagFuncTableGetObjectIds"><div id="func_TagFuncTableGetObjectIds"/>GetObjectIds</a></td><td>取得全部或部分对象(Object)的ID</td></tr>
<tr><td><a href="#TagFuncTableAddObject"><div id="func_TagFuncTableAddObject"/>AddObject</a></td><td>动态创建Object</td></tr>
<tr><td><a href="#TagFuncTableDeleteObject"><div id="func_TagFuncTableDeleteObject"/>DeleteObject</a></td><td>动态删除Object</td></tr>
<tr><td rowspan=3>Object</td><td><a href="#TagFuncTableGetObjectType"><div id="func_TagFuncTableGetObjectType"/>GetObjectType</a></td><td>取得某对象的类型</td></tr>
<tr><td><a href="#TagFuncTableGetObjectProp(用途1)"><div id="func_TagFuncTableGetObjectProp(用途1)"/>GetObjectProp(用途1)</a></td><td>取得某对象的属性</td></tr>
<tr><td><a href="#TagFuncTableSetObjectProp(用途1)"><div id="func_TagFuncTableSetObjectProp(用途1)"/>SetObjectProp(用途1)</a></td><td>更改某对象的属性</td></tr>
<tr><td rowspan=2>tableLayout</td><td><a href="#TagFuncTableGetObjectProp(用途2)"><div id="func_TagFuncTableGetObjectProp(用途2)"/>GetObjectProp(用途2)</a></td><td>取得某TableLayout中某行(TR)、某列(Col)的属性</td></tr>
<tr><td><a href="#TagFuncTableSetObjectProp(用途2)"><div id="func_TagFuncTableSetObjectProp(用途2)"/>SetObjectProp(用途2)</a></td><td>更改某TableLayout中某行(TR)、某列(Col)的属性</td></tr>
<tr><td rowspan=2>下拉资源</td><td><a href="#TagFuncTableAddDroplist"><div id="func_TagFuncTableAddDroplist"/>AddDroplist</a></td><td>增加下拉字典资源</td></tr>
<tr><td><a href="#TagFuncTableSetDroplistProp"><div id="func_TagFuncTableSetDroplistProp"/>SetDroplistProp</a></td><td>更改下拉内容属性</td></tr>
<tr><td rowspan=6>Input控件</td><td><a href="#TagFuncTableGetValue"><div id="func_TagFuncTableGetValue"/>GetValue</a></td><td>取得某Input控件的值</td></tr>
<tr><td><a href="#TagFuncTableSetValue"><div id="func_TagFuncTableSetValue"/>SetValue</a></td><td>置某Input控件的值</td></tr>
<tr><td><a href="#TagFuncTableGetText"><div id="func_TagFuncTableGetText"/>GetText</a></td><td>取得某控件的显示的串</td></tr>
<tr><td><a href="#TagFuncTableSetText"><div id="func_TagFuncTableSetText"/>SetText</a></td><td>置某控件的显示文字</td></tr>
<tr><td><a href="#TagFuncTableSetValueText"><div id="func_TagFuncTableSetValueText"/>SetValueText</a></td><td>同时设定value-text键值对</td></tr>
<tr><td><a href="#TagFuncTableSelectCell"><div id="func_TagFuncTableSelectCell"/>SelectCell</a></td><td>切换焦点</td></tr>
<tr><td rowspan=2>下拉List<br>的Input控件</td><td><a href="#TagFuncTableGetDroplistIndex"><div id="func_TagFuncTableGetDroplistIndex"/>GetDroplistIndex</a></td><td>取得某下拉List的当前选中行顺序号</td></tr>
<tr><td><a href="#TagFuncTableSetDroplistIndex"><div id="func_TagFuncTableSetDroplistIndex"/>SetDroplistIndex</a></td><td>选中下拉List中的某行</td></tr>
<tr><td rowspan=5>下拉Treelist<br>的Input控件</td><td><a href="#TagFuncTableRefresh(用途1)"><div id="func_TagFuncTableRefresh(用途1)"/>Refresh(用途1)</a></td><td>刷新某下拉Input控件的Treelist</td></tr>
<tr><td><a href="#TagFuncTableLoad(含义2)"><div id="func_TagFuncTableLoad(含义2)"/>Load(含义2)</a></td><td>为某下拉Input控件的Treelist加载数据</td></tr>
<tr><td><a href="#TagFuncTableFilter"><div id="func_TagFuncTableFilter"/>Filter</a></td><td>过滤某下拉Input控件的Treelist</td></tr>
<tr><td><a href="#TagFuncTableBuildTreelist"><div id="func_TagFuncTableBuildTreelist"/>BuildTreelist</a></td><td>重新创建某下拉Input控件的Treelist</td></tr>
<tr><td><a href="#TagFuncTableCloseDropdown"><div id="func_TagFuncTableCloseDropdown"/>CloseDropdown</a></td><td>关闭正处在弹出状态的下拉</td></tr>
<tr><td rowspan=19>Upload(文件上传)<br>的Input控件</td><td><a href="#TagFuncTableSetFiles"><div id="func_TagFuncTableSetFiles"/>SetFiles</a></td><td>限制上传文件个数</td></tr>
<tr><td><a href="#TagFuncTableSetFileTypes"><div id="func_TagFuncTableSetFileTypes"/>SetFileTypes</a></td><td>限制文件类型</td></tr>
<tr><td><a href="#TagFuncTableSetFileMaxKb"><div id="func_TagFuncTableSetFileMaxKb"/>SetFileMaxKb</a></td><td>限制单个文件长度</td></tr>
<tr><td><a href="#TagFuncTableSetPictureMaxSize"><div id="func_TagFuncTableSetPictureMaxSize"/>SetPictureMaxSize</a></td><td>限制图片文件尺寸</td></tr>
<tr><td><a href="#TagFuncTableGetFiles"><div id="func_TagFuncTableGetFiles"/>GetFiles</a></td><td>取得文件个数</td></tr>
<tr><td><a href="#TagFuncTableGetFilename"><div id="func_TagFuncTableGetFilename"/>GetFilename</a></td><td>取得文件名</td></tr>
<tr><td><a href="#TagFuncTableGetFileType"><div id="func_TagFuncTableGetFileType"/>GetFileType</a></td><td>取得文件的扩展名</td></tr>
<tr><td><a href="#TagFuncTableGetFileSize"><div id="func_TagFuncTableGetFileSize"/>GetFileSize</a></td><td>取得文件的长度</td></tr>
<tr><td><a href="#TagFuncTableGetPictureWidth"><div id="func_TagFuncTableGetPictureWidth"/>GetPictureWidth</a></td><td>取得图片文件的宽度</td></tr>
<tr><td><a href="#TagFuncTableGetPictureHeight"><div id="func_TagFuncTableGetPictureHeight"/>GetPictureHeight</a></td><td>取得图片文件的高度</td></tr>
<tr><td><a href="#TagFuncTableGetFileBase64"><div id="func_TagFuncTableGetFileBase64"/>GetFileBase64</a></td><td>取得文件的Base64串, 用于页面自行上传</td></tr>
<tr><td><a href="#TagFuncTablefptUpload"><div id="func_TagFuncTablefptUpload"/>fptUpload</a></td><td>Ftp方式上传文件</td></tr>
<tr><td><a href="#TagFuncTablehttpUpload"><div id="func_TagFuncTablehttpUpload"/>httpUpload</a></td><td>以Http PUT方式上传文件</td></tr>
<tr><td><a href="#TagFuncTablehttpPost"><div id="func_TagFuncTablehttpPost"/>httpPost</a></td><td>以Http POST方式将文件内容发给服务器</td></tr>
<tr><td><a href="#TagFuncTableCancelUpload"><div id="func_TagFuncTableCancelUpload"/>CancelUpload</a></td><td>中断上传，仅用于以Http POST方式上传、并且是分块、异步的场合的</td></tr>
<tr><td><a href="#TagFuncTableGetHttpPostResponse"><div id="func_TagFuncTableGetHttpPostResponse"/>GetHttpPostResponse</a></td><td>取得上次执行HttpPost后的服务器返回串</td></tr>
<tr><td><a href="#TagFuncTableAddFile"><div id="func_TagFuncTableAddFile"/>AddFile</a></td><td>增加一个本地文件</td></tr>
<tr><td><a href="#TagFuncTableOpenFileDialog"><div id="func_TagFuncTableOpenFileDialog"/>OpenFileDialog</a></td><td>打开文件选择对话框，相当于模拟点击右侧小按钮</td></tr>
<tr><td><a href="#TagFuncTableEmpty"><div id="func_TagFuncTableEmpty"/>Empty</a></td><td>清空选中的文件, 以便再次使用</td></tr>
<tr><td rowspan=1>Toolbar (工具条)</td><td><a href="#TagFuncTableBindMenu"><div id="func_TagFuncTableBindMenu"/>BindMenu</a></td><td>绑定工具条和菜单资源</td></tr>
<tr><td rowspan=1>动态菜单按钮<br>的Input控件</td><td><a href="#TagFuncTablePopupMenu"><div id="func_TagFuncTablePopupMenu"/>PopupMenu</a></td><td>弹出下拉菜单，用于动态菜单按钮</td></tr>
<tr><td rowspan=4>菜单(Menus)资源</td><td><a href="#TagFuncTableSetMenu"><div id="func_TagFuncTableSetMenu"/>SetMenu</a></td><td>重构某菜单</td></tr>
<tr><td><a href="#TagFuncTableDeleteMenuItem"><div id="func_TagFuncTableDeleteMenuItem"/>DeleteMenuItem</a></td><td>删除某菜单中的某个菜单项</td></tr>
<tr><td><a href="#TagFuncTableGetMenuItemProp"><div id="func_TagFuncTableGetMenuItemProp"/>GetMenuItemProp</a></td><td>取得某菜单中的某个菜单项的属性</td></tr>
<tr><td><a href="#TagFuncTableSetMenuItemProp"><div id="func_TagFuncTableSetMenuItemProp"/>SetMenuItemProp</a></td><td>更改某菜单中的某个菜单项的属性</td></tr>
<tr><td rowspan=6>分页器(Pager)</td><td><a href="#TagFuncTableBindPager"><div id="func_TagFuncTableBindPager"/>BindPager</a></td><td>分页器和Treelist(或报表数据源)绑定</td></tr>
<tr><td><a href="#TagFuncTableGetPages"><div id="func_TagFuncTableGetPages"/>GetPages</a></td><td>取得总页数</td></tr>
<tr><td><a href="#TagFuncTableGetCurrentPage"><div id="func_TagFuncTableGetCurrentPage"/>GetCurrentPage</a></td><td>取得当前页</td></tr>
<tr><td><a href="#TagFuncTableGotoPage"><div id="func_TagFuncTableGotoPage"/>GotoPage</a></td><td>切换当前页</td></tr>
<tr><td><a href="#TagFuncTableRefresh(用途2)"><div id="func_TagFuncTableRefresh(用途2)"/>Refresh(用途2)</a></td><td>刷新Treelist</td></tr>
<tr><td><a href="#TagFuncTableTimerRoundPage"><div id="func_TagFuncTableTimerRoundPage"/>TimerRoundPage</a></td><td>启动内部定时器，自动滚动跳转到下一页</td></tr>
<tr><td rowspan=9>选项卡(Tab)</td><td><a href="#TagFuncTableGetTabCount"><div id="func_TagFuncTableGetTabCount"/>GetTabCount</a></td><td>获得选项卡中页签数量</td></tr>
<tr><td><a href="#TagFuncTableGetTabIds"><div id="func_TagFuncTableGetTabIds"/>GetTabIds</a></td><td>获得选项卡中各页签的Id，逗号分隔</td></tr>
<tr><td><a href="#TagFuncTableSetCurSel"><div id="func_TagFuncTableSetCurSel"/>SetCurSel</a></td><td>切换选项卡当前页签</td></tr>
<tr><td><a href="#TagFuncTableGetCurSel"><div id="func_TagFuncTableGetCurSel"/>GetCurSel</a></td><td>获得选项卡中当前页签的顺序号</td></tr>
<tr><td><a href="#TagFuncTableGetCurSelId"><div id="func_TagFuncTableGetCurSelId"/>GetCurSelId</a></td><td>获得选项卡中当前页签的Id</td></tr>
<tr><td><a href="#TagFuncTableDeleteTab"><div id="func_TagFuncTableDeleteTab"/>DeleteTab</a></td><td>删除选项卡中的某个页签</td></tr>
<tr><td><a href="#TagFuncTableInsertTab"><div id="func_TagFuncTableInsertTab"/>InsertTab</a></td><td>插入新页签</td></tr>
<tr><td><a href="#TagFuncTableGetObjectProp(用途3)"><div id="func_TagFuncTableGetObjectProp(用途3)"/>GetObjectProp(用途3)</a></td><td>取得选项卡中某页签的属性</td></tr>
<tr><td><a href="#TagFuncTableSetObjectProp(用途3)"><div id="func_TagFuncTableSetObjectProp(用途3)"/>SetObjectProp(用途3)</a></td><td>更改选项卡中某页签的属性</td></tr>
<tr><td rowspan=6>提交</td><td><a href="#TagFuncTableValidate"><div id="func_TagFuncTableValidate"/>Validate</a></td><td>验证</td></tr>
<tr><td><a href="#TagFuncTableGetChangedXML"><div id="func_TagFuncTableGetChangedXML"/>GetChangedXML</a></td><td>取得用于提交的XML串</td></tr>
<tr><td><a href="#TagFuncTableGetChanged"><div id="func_TagFuncTableGetChanged"/>GetChanged</a></td><td>判断是否被修改过</td></tr>
<tr><td><a href="#TagFuncTableResetChanged"><div id="func_TagFuncTableResetChanged"/>ResetChanged</a></td><td>合并修改内容</td></tr>
<tr><td><a href="#TagFuncTableSetAsNewRow"><div id="func_TagFuncTableSetAsNewRow"/>SetAsNewRow</a></td><td>强制设置新增、修改的标识</td></tr>
<tr><td><a href="#TagFuncTableIsNewRow"><div id="func_TagFuncTableIsNewRow"/>IsNewRow</a></td><td>是否新增行</td></tr>
<tr><td rowspan=5>图片流(ImageFlow)控件</td><td><a href="#TagFuncTableLocate"><div id="func_TagFuncTableLocate"/>Locate</a></td><td>将中心位置定位到某幅图</td></tr>
<tr><td><a href="#TagFuncTableScroll"><div id="func_TagFuncTableScroll"/>Scroll</a></td><td>发送一个滚动消息</td></tr>
<tr><td><a href="#TagFuncTableGetImages"><div id="func_TagFuncTableGetImages"/>GetImages</a></td><td>取得图片数</td></tr>
<tr><td><a href="#TagFuncTableGetImageProp"><div id="func_TagFuncTableGetImageProp"/>GetImageProp</a></td><td>取得某个图片的属性值(包括自定义属性)</td></tr>
<tr><td><a href="#TagFuncTableGetImagePropById"><div id="func_TagFuncTableGetImagePropById"/>GetImagePropById</a></td><td>按Id取得某个图片的属性值(包括自定义属性)</td></tr>
<tr><td rowspan=3>其它</td><td><a href="#TagFuncTableAddPath"><div id="func_TagFuncTableAddPath"/>AddPath</a></td><td>动态创建Path</td></tr>
<tr><td><a href="#TagFuncTableExport"><div id="func_TagFuncTableExport"/>Export</a></td><td>取得XML格式的数据</td></tr>
<tr><td><a href="#TagFuncTableAddHotKey"><div id="func_TagFuncTableAddHotKey"/>AddHotKey</a></td><td>增设快捷键</td></tr>
</table>
<br>



 函数详解:
<div id="TagFuncTableBuild"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Build</td><td class="funcTD">根据XML描述文件创建Freeform</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableBuild"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>XML所在的URL(相对或绝对)，或者直接就是XML大串</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1 - 成功; 空串 - 失败(将自动弹出失败页面)</td></tr>
</table>
<br>

<div id="TagFuncTableLoad(含义1)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Load(含义1)</td><td class="funcTD">加载数据</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableLoad(含义1)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>XML/JSON数据的URL(相对或绝对)、或XML/JSON大串、或类似"prop1=value1; prop2=value2; ..."的属性串</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>可选，格式为：asNewRow=[true/false];useLast=[true/false];method=[?], 其含义分别为：<br>
<b>asNewRow (或asNew)</b>: 默认false。 如果为true，表示加载后仍作为新增的行，并且当加载到的数据条项少于XML描述文件的条项数时，用defaultValue初始数据;<br>
<b>useLast</b>: 当加载到的数据条项少于XML描述文件的条项数时，是否用上次输入中遗留的数值, 如果是false则全部清空，默认false;<br>
<b>method</b> - http的发送方法，为Get / PostEncodeURI / Post，默认是Get.  如果为PostEncodeURI，则自动将URL中问号(?)后面的部分移到http body中，并对文字作EncodeURI转码处理； 如果是Post，则不作转码处理.<br>
		</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1 - 成功; 空串 - 失败(将自动弹出失败页面)</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("load", "{id:kk203, price:203.22, prov: 501}");　 //JSON串<br>
AF.func("load", url + "\r\n asNewRow=true; useLast=true");　 //使用了参数2</td></tr>
</table>
<br>

<div id="TagFuncTableBindAsMaster"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>BindAsMaster</td><td class="funcTD">共享Treelist加载的XML/JSON数据</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 8.有表头表体的表单(1)">&nbsp;&nbsp;<a href="#func_TagFuncTableBindAsMaster"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Treelist的句柄</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>需分享的XML节点名</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetProp"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetProp</td><td class="funcTD">取得 XML文档中的 Properties 和 Properties \ BackGround 中的属性的值</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetProp"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>属性名, 包括Properties中的自定义属性</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的值</td></tr>
</table>
<br>

<div id="TagFuncTableSetProp"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetProp</td><td class="funcTD">更改 XML文档中的 Properties 和 Properties \ BackGround 中的属性的值</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 6.动态更改属性(1)、19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableSetProp"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>属性名, 包括Properties中的自定义属性</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性的值</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetHandle"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetHandle</td><td class="funcTD">取得当前freeform、或内部非模式对话框、或Validation、或下拉的句柄</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 8.有表头表体的表单(1)、5.事件、按钮、菜单、工具条">&nbsp;&nbsp;<a href="#func_TagFuncTableGetHandle"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可以为:<br>
<b>空串(无参数)</b> - 取当前Freeform的句柄，常用于Export、GetChanged、GetChangedXML函数;<br>
<b>innerDialog</b> - 取内部非模式对话框的Freeform句柄;<br>
<b>Validation</b> - 取Validation的句柄, 常用于全局函数动态存取Validation;<br>
<b>某下拉 Llist 控件的ID</b> - 取得某下拉 Llist 的句柄，也包括下拉字典型的EditWithButton. 操控下拉List的内容请参见“全局函数”;<br>
<b>某下拉 TreeLlist 控件的ID</b> - 取得某下拉Treelist控件的Treelist的句柄，操控下拉TreeList的内容请参见“扩展函数”;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>整数串</td></tr>
</table>
<br>

<div id="TagFuncTableRecover"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Recover</td><td class="funcTD">将数据恢复到输入前的初始状态</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableRecover"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.如果执行了Load( )， 那么这个“初始状态”就变成了Load( )后数据的状态;<br>
2.如果执行了ResetChanged( )， 那么这个“初始状态”就变成了当前数据的状态;
		</td></tr>
</table>
<br>

<div id="TagFuncTableGetObjectId"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetObjectId</td><td class="funcTD">或GetObjId, 取得第n个对象(Object)的ID</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetObjectId"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>顺序号，从0开始计数<br>备注：没有ID的Object将不参与计数</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>ID，空串表示已经到达末尾</td></tr>
</table>
<br>

<div id="TagFuncTableGetObjectIds"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetObjectIds</td><td class="funcTD">或GetObjIds, 取得全部或部分对象(Object)的ID</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetObjectIds"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可选，可以是某种对象类型，例如 input、text、rect等等. 默认是所有类型</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>逗号分隔的ID</td></tr>
</table>
<br>

<div id="TagFuncTableAddObject"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>AddObject</td><td class="funcTD">动态创建Object</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 6.动态更改属性(1)、7.动态更改属性(2)、19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableAddObject"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Object的类型，如Input、Line、image</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性串，例如"x=20;y=33;type=button;text=确认"</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>可选，表示插入位置，可以是插入处的id值，默认为空(表示从末尾添加)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableDeleteObject"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>DeleteObject</td><td class="funcTD">动态删除Object</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 6.动态更改属性(1)">&nbsp;&nbsp;<a href="#func_TagFuncTableDeleteObject"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Object的ID，可以包含多个ID一起删除，相互以逗号分隔</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>TableLayout是无法被删除的</td></tr>
</table>
<br>

<div id="TagFuncTableGetObjectType"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetObjectType</td><td class="funcTD">或GetObjType, 取得某对象的类型</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetObjectType"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Object的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>如Input、Text、Line、Image等</td></tr>
</table>
<br>

<div id="TagFuncTableGetObjectProp(用途1)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetObjectProp(用途1)</td><td class="funcTD">或GetObjProp, 取得XML中某Object(如Input、Line、image等)的属性, 也可以是自定义属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetObjectProp(用途1)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Object的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性名，请参见Freeform的XML文件文档规范</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的值</td></tr>
</table>
<br>

<div id="TagFuncTableSetObjectProp(用途1)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetObjectProp(用途1)</td><td class="funcTD">或SetObjProp, 动态更改XML中某Object(如Input、Line、image等)的属性, 也可以是自定义属性</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableSetObjectProp(用途1)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Object的ID，可以包含多个ID一起更改，相互以逗号分隔</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性名，请参见Freeform的XML文件文档规范</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>内容</td></tr>
  <tr><td align=right>参数4</td><td colspan=2>可选，当Object是Pager(分页器)、参数2是dataURL属性时，此处允许书写例如这样的选项串: <br> 
　　mode=asynch; isResetPage=true<br>其中 mode=asych 表示要求以异步加载数据; isResetPagge=true 表示重置当前页(将当前页转成第一页).</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.少数属性如控件类型、id、type、droplistid是无法修改的;<br>
2.如果是异步加载数据，后继的js不应该调用Treelist的函数;
</td></tr>
</table>
<br>

<div id="TagFuncTableGetObjectProp(用途2)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetObjectProp(用途2)</td><td class="funcTD">或GetObjProp, 取得XML中某TableLayout的某行(TR)、某列(Col)的属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetObjectProp(用途2)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>TableLayout的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>行或列的ID，如果是行，ID前必须加"TR."；如果是列，ID前必须加"col."</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>属性名，有visible、height(仅用于行)、width(仅用于列)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的值</td></tr>
</table>
<br>

<div id="TagFuncTableSetObjectProp(用途2)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetObjectProp(用途2)</td><td class="funcTD">或SetObjProp, 动态更改XML中TableLayout中某行(TR)、某列(Col)的属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetObjectProp(用途2)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>TableLayout的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>行或列的ID，如果是行，ID前必须加"TR."；如果是列，ID前必须加"col."</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>属性名，有visible、height(仅用于行)、width(仅用于列)</td></tr>
  <tr><td align=right>参数4</td><td colspan=2>内容</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>假如某行是 &lt;tr id="row3"&gt;, 如下js隐藏该行:<br>
AF.func("SetObjProp", "layout1 \r\n TR.row3 \r\n visible \r\n false");</td></tr>
</table>
<br>

<div id="TagFuncTableAddDroplist"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>AddDroplist</td><td class="funcTD">动态增加下拉资源(Droplists\Droplist)</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 24.动态更改属性">&nbsp;&nbsp;<a href="#func_TagFuncTableAddDroplist"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可包含id、treelistURL、dataURL等6个属性，以“;”分隔。 例如"id=cus;treelistURL=cus.xml;dataURL=http://www.abcde.com/aa/aa"</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1 - 成功; 空串 - 失败(id为空或重复)</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("AddDroplist", "id=customer;treelistURL=customer.xml;DataCol=id;DisplayCol=name");</td></tr>
</table>
<br>

<div id="TagFuncTableSetDroplistProp"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetDroplistProp</td><td class="funcTD">动态更改XML中某 Droplist 的属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetDroplistProp"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Droplist的ID, 或者是Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性名</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>内容</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.更改dataURL相当于是重新加载数据，其内容可以是绝对或相对URL(注意：是相对于XML描述文件，而不是页面)，也可以是XML/JSON大串，且对type为Droplist、 DropTreelist的Input均能生效;<br>
2.若treelistURL内容是相对URL，那么是相对于该XML描述文件的<br>
3.id是无法修改的</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("SetDroplistProp", "sex \r\n dataURL \r\n &lt;items&gt;&lt;item key=1&gt;男&lt;/item&gt;&lt;item key=2&gt;女&lt;/item&gt;&lt;/items&gt;");</td></tr>
</table>
<br>

<div id="TagFuncTableGetValue"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetValue</td><td class="funcTD">取得某Input控件的值</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 4.关联下拉、5.事件、按钮、菜单、工具条、14.辅助Treelist输入(1)">&nbsp;&nbsp;<a href="#func_TagFuncTableGetValue"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>可选，true/false, true表示取修改前的原始内容(即 Load 的内容), false表示取当前内容，默认是false</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>串</td></tr>
  <tr><td align=right>备注</td><td colspan=2>如果是RadioButton，参数可以是GroupID，这样返回值就是所选RadioButton的SelectValue.</td></tr>
</table>
<br>

<div id="TagFuncTableSetValue"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetValue</td><td class="funcTD">置某Input控件的值</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 14.辅助Treelist输入(1)、19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableSetValue"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>值串</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>如果是RadioButton，参数1可以是GroupID，参数2则为所需的SelectValue.<br><br>
<font color=red>严重警告：</font>参数之间不得留有多余空格，否则结果将不是你所期望的，例如：<br>　　AF.func("SetValue", "city \r\n   "+ vCity);　　//执行结果是左侧有多余空格</td></tr>
</table>
<br>

<div id="TagFuncTableGetText"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetText</td><td class="funcTD">取得某控件的显示的串</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetText"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>串</td></tr>
</table>
<br>

<div id="TagFuncTableSetText"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetText</td><td class="funcTD">置某控件的显示文字</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetText"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>串</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>常用于和Droplist绑定的EditWithButton的显示值，否则和SetValue( )效果一样.</td></tr>
</table>
<br>

<div id="TagFuncTableSetValueText"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetValueText</td><td class="funcTD">增加一个value-text键值对，并应用到当前Input，用于设置了textId的input</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetValueText"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>Value串</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>Text串</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>仅用于Text、Edit、EditWithButton.</td></tr>
</table>
<br>

<div id="TagFuncTableSelectCell"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SelectCell</td><td class="funcTD">切换焦点</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 8.有表头表体的表单(1)">&nbsp;&nbsp;<a href="#func_TagFuncTableSelectCell"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>id，如果id为空则自动取第一个可编辑的id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1-成功, 0-失败</td></tr>
</table>
<br>

<div id="TagFuncTableGetDroplistIndex"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetDroplistIndex</td><td class="funcTD">取得某下拉List的当前选中行顺序号</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetDroplistIndex"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>下拉列表的当前选中行, 从0开始计数</td></tr>
  <tr><td align=right>备注</td><td colspan=2>一般用于非排序的下拉List</td></tr>
</table>
<br>

<div id="TagFuncTableSetDroplistIndex"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetDroplistIndex</td><td class="funcTD">选中下拉List中的某行</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetDroplistIndex"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>行号(下拉列表中的顺序号, 从0开始计数)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1 / 0 - 成功 / 失败</td></tr>
  <tr><td align=right>备注</td><td colspan=2>一般用于非排序的下拉List</td></tr>
</table>
<br>

<div id="TagFuncTableRefresh(用途1)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Refresh(用途1)</td><td class="funcTD">刷新某下拉Input控件的Treelist</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableRefresh(用途1)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableLoad(含义2)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Load(含义2)</td><td class="funcTD">为某下拉Input控件的Treelist加载数据</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableLoad(含义2)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>数据的URL</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableFilter"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Filter</td><td class="funcTD">过滤某下拉Input控件的Treelist</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 4.关联下拉">&nbsp;&nbsp;<a href="#func_TagFuncTableFilter"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>过滤表达式, 请参见<a href="pub01.htm" target=_blank>“公共内容\表达式”</a></td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableBuildTreelist"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>BuildTreelist</td><td class="funcTD">重新创建某下拉Input控件的Treelist</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 4.关联下拉">&nbsp;&nbsp;<a href="#func_TagFuncTableBuildTreelist"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>URL</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableCloseDropdown"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>CloseDropdown</td><td class="funcTD">关闭正处在弹出状态的下拉</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableCloseDropdown"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>被关闭的Input控件的ID, 空串表示当前没有弹出的下拉</td></tr>
  <tr><td align=right>备注</td><td colspan=2>也可用于 DropList</td></tr>
</table>
<br>

<div id="TagFuncTableSetFiles"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetFiles</td><td class="funcTD">限制上传文件个数</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetFiles"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>数字，0表示无限制</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableSetFileTypes"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetFileTypes</td><td class="funcTD">限制文件类型</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetFileTypes"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>为文件后缀，后缀间以逗号分隔，如"bmp,jpg,png"。 后缀也可以是星号(*)，例如"bmp,jpg, *"，带星号表示允许选任何文件，前面的后缀只是起引导作用.</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableSetFileMaxKb"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetFileMaxKb</td><td class="funcTD">限制单个文件长度</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetFileMaxKb"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>数字，单位为KB，0表示不限制</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableSetPictureMaxSize"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetPictureMaxSize</td><td class="funcTD">限制图片文件尺寸</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetPictureMaxSize"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>2个数字，以逗号分隔，分别表示横向/纵向的像素数，0表示不限制.<br>备注：只能辨认后缀是BMP、JPG、PNG、GIF、TIF的图片文件.</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetFiles"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetFiles</td><td class="funcTD">取得文件个数</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetFiles"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>文件数</td></tr>
</table>
<br>

<div id="TagFuncTableGetFilename"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetFilename</td><td class="funcTD">取得文件名</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetFilename"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号，从0开始计数</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>全文件名，空串表示顺序号已超出范围</td></tr>
</table>
<br>

<div id="TagFuncTableGetFileType"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetFileType</td><td class="funcTD">取得文件的扩展名</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetFileType"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号，从0开始计数, 或者干脆就是全文件名</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>文件名的后缀</td></tr>
</table>
<br>

<div id="TagFuncTableGetFileSize"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetFileSize</td><td class="funcTD">取得文件的长度</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetFileSize"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号，从0开始计数, 或者干脆就是全文件名</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>整数，单位：kb</td></tr>
</table>
<br>

<div id="TagFuncTableGetPictureWidth"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetPictureWidth</td><td class="funcTD">取得图片文件的宽度</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetPictureWidth"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号，从0开始计数, 或者干脆就是全文件名</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>整数，单位：像素</td></tr>
</table>
<br>

<div id="TagFuncTableGetPictureHeight"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetPictureHeight</td><td class="funcTD">取得图片文件的高度</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetPictureHeight"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号，从0开始计数, 或者干脆就是全文件名</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>整数，单位：像素</td></tr>
</table>
<br>

<div id="TagFuncTableGetFileBase64"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetFileBase64</td><td class="funcTD">取得文件的Base64串, 用于页面自行上传</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetFileBase64"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号，从0开始计数, 或者干脆就是全文件名<br>备注：如果参数是全文件名，那么该文件可以是任何本地文件.</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>Base64大串</td></tr>
</table>
<br>

<div id="TagFuncTablefptUpload"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>fptUpload</td><td class="funcTD">Ftp方式上传文件</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 17.文件上传控件">&nbsp;&nbsp;<a href="#func_TagFuncTablefptUpload"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>格式为：url=[?];uid=[?];pwd=[?];index=[?];isShowProgress=[?];isEcho=[?]; . . . , 其含义如下：<br>
<b>url</b> - FTP服务器的URL，必须以"ftp://"开头，例如：ftp://www.supcan.cn/WorkPlace/Res<br>
<b>uid</b> - FTP帐号，可选;<br>
<b>pwd</b> - 密码，可选;<br>
<b>isShowProgress</b> - 文件过程中是否显示进度条，可选true/false, 默认是true;<br>
<b>isEcho</b> - 文件上传成功后是否弹出一个提示对话框，可选true/false, 默认是true;<br><br>
　　此外，也可以上传独立的本地文件，和对话框中的文件无关：<br>
<b>filename</b> - 本地文件全文件名，如果要同时上传多个文件，请以Tab("\t")符分隔;<br>
　　甚至也可以上传独立的本地目录，参数如下：<br>
<b>dir</b> - 本地目录的路径，如果要同时上传多个目录，请以Tab("\t")符分隔;<br>
<b>isCreateServerDir</b> - 是否在服务器端也建立该目录, true/false, 默认false;<br>
<b>ext</b> - 需要上传的文件的通配符，比如"*.doc"，默认是"*.*";<br>
<b>isIncludeSubDir</b> - 是否包含目录下子孙目录的文件, true/false, 默认false;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1-成功, 0-失败</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.若帐号或密码为星号(*)，那么上传前将会弹出帐号和密码的对话框;<br>
2.上传过程是异步的，所以不应该在本函数后面书写其它上传相关js;
		</td></tr>
</table>
<br>

<div id="TagFuncTablehttpUpload"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>httpUpload</td><td class="funcTD">以Http PUT方式上传文件</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 17.文件上传控件">&nbsp;&nbsp;<a href="#func_TagFuncTablehttpUpload"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>格式为：url=[?];uid=[?];pwd=[?];index=[?];isShowProgress=[?];isEcho=[?];filename=[?], 其含义如下：<br>
<b>url</b> - URL(绝对或相对)，有二种写法:<br>　　一.如/WorkPlace/Res/abc.txt，其中abc.txt是服务器端最终生成文件，常用于单个文件上传；<br>　　二.如/WorkPlace/Res/，即以"/"结尾，服务器将在此目录生成与本地上传文件同名的文件<br>
<b>uid</b> - 具有Http"写"权限的帐号，可选;<br>
<b>pwd</b> - 密码，可选;<br>
<b>isShowProgress</b> - 文件过程中是否显示进度条，可选true/false, 默认是true;<br>
<b>isEcho</b> - 文件上传成功后是否弹出一个提示对话框，可选true/false, 默认是true;<br>
<b>filename</b> - 上传独立的本地文件，用于上传和对话框中的文件无关的其它本地文件，可选;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1-成功, 0-失败</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.若帐号或密码为星号(*)，那么上传前将会弹出帐号和密码的对话框;;<br>
2.上传过程是异步的，所以不应该在本函数后面书写其它上传相关js;
		</td></tr>
</table>
<br>

<div id="TagFuncTablehttpPost"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>httpPost</td><td class="funcTD">以Http POST方式将文件内容发给服务器</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTablehttpPost"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>格式为：url=[?];uid=[?];pwd=[?];index=[?];isEcho=[?];filename=[?];mode=[?];PartSize=[?];isShowProgress=[?]..., 其含义如下：<br>
<b>url</b> - 服务器URL，绝对或相对均可;<br>
<b>uid</b> - 该URL的Http帐号，可选;<br>
<b>pwd</b> - 登录名的密码，可选;<br>
<b>isEcho</b> - 文件上传成功后是否弹出一个提示对话框，可选true/false, 默认是true;<br>
<b>index</b> - 上传文件的顺序号 (即对话框中的文件的顺序号，从0开始计数);<br>
<b>filename</b> - 上传独立的本地文件，用于上传和对话框中的文件无关的其它本地文件，可选。如果设置了本参数，前面的 index 参数就可以忽略;<br>
<b>dir</b> - 将独立的本地目录中的某些文件打包成zip文件上传，和对话框中的文件无关，可选。如果设置了本参数，前面的 index、filenname 参数将无效;<br>
<b>PartSize</b> - 分块上传，指定的块大小，单位是字节，也可以在数字后面加“K”、"M"表示单位是千字节、兆字节。默认是0，即不分块;<br>
<b>StartPart</b> - 分块上传，指定从第几块开始上传(从0开始计数)，常用于断点续传。默认是0;<br>
<b>mode</b> - synch/asynch - 同步/异步，默认是同步;<br>
<b>isShowProgress</b> - 当分块上传时，在上传过程中是否显示进度条，可选true/false, 默认是true;<br>
<b>Compress</b> - zip/autozip/空串，是否先压缩成zip再上传，"zip"表示始终采用zip压缩，"autozip"表示如果压缩后尺寸反而更大，则上传原文件，默认是空(即不压缩); 如果文件是压缩后上传的，那么URL中将自动增加 "zip=true" 这样的参数，便于后端识别。如果前面设定了"dir"参数，那么本参数被内置为"Zip". <br>
如果前面选择了 dir 参数，那么还可以选择如下和目录文件有关的内容：<br>
<b>ext</b> - 文件的通配符，比如"*.doc"，默认是"*.*";<br>
<b>isIncludeSubDir</b> - 是否包含目录下子孙目录的文件, true/false, 默认false;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1-成功, 0-失败</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.一次只能上传一个文件，要上传多个文件，必须用js写个循环;<br>
2.参数 index、filename 和 dir 是三种不同用途，所以只能三选一;<br>
3.发送的Http请求中，Http body是文件的二进制内容，Http Header中的Content-Type是application/octet-stream，发送方式是POST<br>
4.文件名可以写在URL的参数中，以便后端获取;<br>
5.如果不采用分块上传，单个文件的长度是有限制的，因为是一次性读取到内存后发送的;<br>
6.如果启用<b>分块上传</b>，就能够上传大于4G的文件，控件会多次发送http请求，每次发送一段，并且请求的URL中将自动增加诸如:<br> "...?PartSize=65536&Parts=30&Part=0&MD5=e4b69387a56aef304625b2c1809c5a3e"   这样的参数，其中 PartSize表示块的大小, Parts 表示一共有多少块，Part表示当前是第几块(从0开始计数)，MD5是当前数据块的MD5串，用以验证。如果接收数据有误，服务器的 Http StatusCode(状态码)必须不等于200，这样控件会重复发送，最多重复5遍 ;<br>
7.如果是分块上传，每上传一块都会触发 Upload 事件;<br>
</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>//上传对话框中的第一个文件<br>
AF.func("httpPost", "edit1\r\n url=../usercache/savefile.aspx?docname=12.doc; index=0;");<br>
//单独上传和对话框无关的文件<br>
AF.func("httpPost", "edit1\r\n url=../usercache/savefile.aspx?doc=手册.doc&userid=33; filename=c:\\mydoc\\手册.doc; partSize=500K; mode=asynch");</td></tr>
</table>
<br>

<div id="TagFuncTableCancelUpload"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>CancelUpload</td><td class="funcTD">中断上传，仅用于以Http POST方式上传、并且是分块、异步的场合的</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableCancelUpload"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>格式为 Filename=[?];NotifyServer=[?]，含义如下:<br>
<b>NotifyServer</b> - true/false, 表示是否要通知服务器，要求删除先前上传的内容，默认是false。如果为true, 那么控件将发送一个请求http，其URL中将额外多了一个如下参数:  “Upload=Canceled”，便于服务器判断;<br>
<b>Filename</b> - 文件名，当同时有多个文件上传时，需要指定中断哪个文件，如果为空，表示中断正在异步上传的所有任务，默认是空;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetHttpPostResponse"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetHttpPostResponse</td><td class="funcTD">取得上次执行HttpPost后的服务器返回串</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetHttpPostResponse"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>串，服务器的 response</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.仅限于同步的httpPost; 如果是分块上传，则返回最后一次的服务器response</td></tr>
</table>
<br>

<div id="TagFuncTableAddFile"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>AddFile</td><td class="funcTD">增加一个本地文件</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableAddFile"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>全文件名</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败, 失败原因是文件不存在</td></tr>
</table>
<br>

<div id="TagFuncTableOpenFileDialog"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>OpenFileDialog</td><td class="funcTD">打开文件选择对话框，相当于模拟点击右侧小按钮</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableOpenFileDialog"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 对话框确认/取消</td></tr>
</table>
<br>

<div id="TagFuncTableEmpty"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Empty</td><td class="funcTD">清空选中的文件, 以便再次使用</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableEmpty"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Input控件的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>可选，数字，为对话框中的文件的顺序号(从0开始计数)，表示仅仅剔除其中的某个文件，其它不变</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableBindMenu"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>BindMenu</td><td class="funcTD">动态将 &lt;menus&gt; 资源下的某个菜单 和 工具条绑定</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableBindMenu"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Toolbar的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>Menu的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>其实用 SetObjectProp 函数也完全能实现本功能</td></tr>
</table>
<br>

<div id="TagFuncTablePopupMenu"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>PopupMenu</td><td class="funcTD">弹出下拉菜单，用于动态菜单按钮</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 6.动态更改属性(1)">&nbsp;&nbsp;<a href="#func_TagFuncTablePopupMenu"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableSetMenu"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetMenu</td><td class="funcTD">重构某菜单</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 6.动态更改属性(1)">&nbsp;&nbsp;<a href="#func_TagFuncTableSetMenu"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Menu的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>用法1: 菜单XML的URL; <br>用法2: 直接的XML大串; <br>用法3: 以回车(或Tab)分隔的简易文本串，如下所示:<br>　　id=101; text=菜单项1; icon=car0.png; checked=true; <br>　　id=102; text=菜单项2; icon=treelist/cars.zip#car1.png; <br>　　...</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>用法3只能创建单级菜单</td></tr>
</table>
<br>

<div id="TagFuncTableDeleteMenuItem"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>DeleteMenuItem</td><td class="funcTD">删除某菜单中的某个菜单项</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableDeleteMenuItem"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Menu的ID,  如果不确定，允许为空串</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>菜单项的ID, 即某个 item 的 id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetMenuItemProp"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetMenuItemProp</td><td class="funcTD">取得某菜单中的某个菜单项的属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetMenuItemProp"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Menu的ID, 如果不确定，允许为空串</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>菜单项的ID, 即某个 item 的 id</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>属性名，支持 icon(或image)、text、detail、enabled、checked, 或者是其它自定义属性</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的内容</td></tr>
</table>
<br>

<div id="TagFuncTableSetMenuItemProp"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetMenuItemProp</td><td class="funcTD">更改某菜单中的某个菜单项的属性</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 5.事件、按钮、菜单、工具条">&nbsp;&nbsp;<a href="#func_TagFuncTableSetMenuItemProp"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Menu的ID, 如果不确定，允许为空串</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>菜单项的ID, 即某个 item 的 id</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>属性名，支持 icon(或image)、text、detail、enabled、checked, 或者是其它自定义属性</td></tr>
  <tr><td align=right>参数4</td><td colspan=2>属性的内容</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>如果该菜单项是和 Toolbar 工具条绑定的，那么工具条的相关内容也会随之改变</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("SetMenuItemProp", "menu1 \r\n 5001 \r\n enabled \r\n false");</td></tr>
</table>
<br>

<div id="TagFuncTableBindPager"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>BindPager</td><td class="funcTD">分页器和Treelist(或报表数据源)绑定</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见Treelist的演示页: 16.分页方案(一)、Report的演示页: 26.大数据的分页查询">&nbsp;&nbsp;<a href="#func_TagFuncTableBindPager"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>Treelist的句柄，或报表中数据源的句柄</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>Pager的ID</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>可选，格式为 CurrentPage=[?], 表示将当前页定位到某页(从0开始计数)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetPages"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetPages</td><td class="funcTD">取得总页数</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetPages"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>分页器的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>页数</td></tr>
</table>
<br>

<div id="TagFuncTableGetCurrentPage"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetCurrentPage</td><td class="funcTD">取得当前页</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetCurrentPage"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>分页器的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>页号，从0开始计数</td></tr>
</table>
<br>

<div id="TagFuncTableGotoPage"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GotoPage</td><td class="funcTD">切换当前页</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGotoPage"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>分页器的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>页号，从0开始计数</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败</td></tr>
</table>
<br>

<div id="TagFuncTableRefresh(用途2)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Refresh(用途2)</td><td class="funcTD">刷新Treelist、重新获得总行数</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableRefresh(用途2)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>Pager的ID</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableTimerRoundPage"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>TimerRoundPage</td><td class="funcTD">启动内部定时器，自动滚动跳转到下一页</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableTimerRoundPage"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>分页器的ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>0 - 终止定时器； 大于100的整数 - 间隔，单位是毫秒</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("timerRoundPage", "IDPage \r\n 3000");</td></tr>
</table>
<br>

<div id="TagFuncTableGetTabCount"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetTabCount</td><td class="funcTD">获得选项卡中页签数量</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见Freeform的演示页: 20.选项卡">&nbsp;&nbsp;<a href="#func_TagFuncTableGetTabCount"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>数量</td></tr>
</table>
<br>

<div id="TagFuncTableGetTabIds"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetTabIds</td><td class="funcTD">获得选项卡中各页签的Id，逗号分隔</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetTabIds"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>串</td></tr>
</table>
<br>

<div id="TagFuncTableSetCurSel"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetCurSel</td><td class="funcTD">切换选项卡当前页签</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见Freeform的演示页: 20.选项卡">&nbsp;&nbsp;<a href="#func_TagFuncTableSetCurSel"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>顺序号</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败</td></tr>
</table>
<br>

<div id="TagFuncTableGetCurSel"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetCurSel</td><td class="funcTD">获得选项卡中当前页签的顺序号</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetCurSel"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>顺序号</td></tr>
</table>
<br>

<div id="TagFuncTableGetCurSelId"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetCurSelId</td><td class="funcTD">获得选项卡中当前页签的Id</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetCurSelId"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>Id值</td></tr>
</table>
<br>

<div id="TagFuncTableDeleteTab"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>DeleteTab</td><td class="funcTD">删除选项卡中的某个页签</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableDeleteTab"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>页签的Id，或顺序号(从0开始计数)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableInsertTab"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>InsertTab</td><td class="funcTD">插入新页签</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见Freeform的演示页: 20.选项卡">&nbsp;&nbsp;<a href="#func_TagFuncTableInsertTab"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>选项卡的Id</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>插入位置, 小于0表示从右侧(末尾)添加</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>名值对的串，以分号分隔，名值对含义如下：<br>
<b>id</b> - 页签的 id 号;<br>
<b>type</b> - 页签大粒度组件的类型;<br>
<b>text</b> - 页签上的文字;<br>
<b>createPara</b> - 大粒度组件的创建参数, 请以引号包绕;<br>
<b>enable</b> - 页签是否Enable;<br>
<b>cursel</b> - 当前页签, new 表示定位到新的页签, old表示页签保持不变, 默认是 new;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("InsertTab", "Tab1 \r\n 0 \r\n id=kk; type=treelist; text=销售表; cursel=old; createPara='border=none'");</td></tr>
</table>
<br>

<div id="TagFuncTableGetObjectProp(用途3)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetObjectProp(用途3)</td><td class="funcTD">取得选项卡中某页签的属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetObjectProp(用途3)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>选项卡的ID和页签的ID，以小数点分隔, 例如 "Tab1.t1"</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性名，有如下属性:<br>
<b>id</b> - 页签的 id ;<br>
<b>type</b> - 页签的大粒度组件的类型 ;<br>
<b>text</b> - 页签的文字 ;<br>
<b>enable</b> - 页签是否Enable;<br>
<b>visible</b> - 页签是否可见;<br>
<b>URL</b> - 类型为WebBrowser的大粒度组件的URL ;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的值</td></tr>
</table>
<br>

<div id="TagFuncTableSetObjectProp(用途3)"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetObjectProp(用途3)</td><td class="funcTD">更改选项卡中某页签的属性</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetObjectProp(用途3)"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>选项卡的ID和页签的ID，以小数点分隔, 例如 "Tab1.t1"</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>属性名，见上面的GetObjectProp函数，但 id 和 type 是不能被设置的.</td></tr>
  <tr><td align=right>参数3</td><td colspan=2>内容</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 成功/失败</td></tr>
</table>
<br>

<div id="TagFuncTableValidate"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Validate</td><td class="funcTD">验证输入的内容. 如果未通过验证，将自动浮现出错误提示. 验证包括input的nullAble属性、以及 &lt;Validations&gt; 的内容.</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableValidate"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可选，可以有：<br>
<b>include</b> - 其它Freeform的句柄，将它也包含进来. 若有多个句柄, 则以逗号分隔.<br>
		</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1 - 通过验证;<br>0 - 未通过，并自动弹出错误的对话框.</td></tr>
  <tr><td align=right>备注</td><td colspan=2>一般不需要调用这个函数，因为函数GetChangedXML( )本身就包含了验证过程.</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>var h2 = AForm2.func("GetHandle", "");<br>
var h3 = AForm3.func("GetHandle", "");<br>
AF.func("Validate", "include=" +h2+ "," +h3);</td></tr>
</table>
<br>

<div id="TagFuncTableGetChangedXML"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetChangedXML</td><td class="funcTD">调用Validate( )验证，并生成用于提交的XML串</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 1.感受Freeform、8.有表头表体的表单(1)">&nbsp;&nbsp;<a href="#func_TagFuncTableGetChangedXML"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可选，可以有：<br>
<b>level</b> - 级别，有0(默认，取得所有Input的当前内容)、1(只取得修改过的Input的内容、原始内容)、2(取得所有Input的内容、原始内容);<br>
<b>returnFormat</b> - 本函数返回串的格式, xml/json, 默认是xml;<br>
<b>DateFormat</b> - 日期的格式，默认是'%Y.%m.%d'，可参见<a href="pub02.htm#TagFuncTablenow" target=_blank>公共内容中now( )函数</a>的参数<br>
<b>DateTimeFormat</b> - 日期时间的格式，默认是'%Y.%m.%d %H:%M:%S'，可参见<a href="pub02.htm#TagFuncTablenow" target=_blank>公共内容中now( )函数</a>的参数;<br>
<b>isExecuteValidations</b> - 是否执行XML描述文件的 &lt;Validations&gt; 中的验证，默认是true.<br>
<b>include</b> - 其它Freeform的句柄，将它也包含进来. 若有多个句柄, 则以逗号分隔.<br>
<b>includeCol / excludeCol</b> - 仅包含某些列/不包含某些列，二者可选其一，表示列的<b>范围</b>. 列名之间以逗号分隔。默认是空串，表示提交所有列;<br>
<b>absIncludeCol</b> - 始终包含某些列，不管其列数据有没有被修改过. 仅用于Level=1;<br>
		</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>正常情况下是一个XML或JSON串. 如果串仅为"0"，表示未通过验证，且自动弹出错误的对话框.</td></tr>
  <tr><td align=right>备注</td><td colspan=2>参与生成XML的Object的条件为：<br>1.可输入的对象(Input)，且ID有效(不为空、不以$开头);<br>2.IsBindingCol=true 的 Text 和 Image 对象，且ID有效(不为空、不以$开头);</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>示例一：<br>
AF.func("GetChangedXML", "level=1;dateFormat=%Y-%m-%d;dateTimeFormat=%Y-%m-%d %H:%M:%S");<br>
示例二：<br>
var h2 = AForm2.func("GetHandle", "");<br>
var h3 = AForm3.func("GetHandle", "");<br>
AF.func("GetChangedXML", "level=1; include=" +h2+ "," +h3);</td></tr>
</table>
<br>

<div id="TagFuncTableGetChanged"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetChanged</td><td class="funcTD">判断是否被修改过, 也可以写成 IsChanged.</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetChanged"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>有4种写法：<br>
1.空串 - 检查整个Freeform是否被修改过;<br>
2.ID号 - 检查某个ID的输入框是否被修改过;<br>
3.某Radio的GroupID号 - 检查某组Radio框是否被修改过;<br>
4.include=[Feeeform句柄],[Feeeform句柄] - 同时检查其它几个Freeform，逗号分隔。(注：可用GetHandle( )取得句柄)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 是/否</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("GetChanged", "price");<br>
var h = AF2.func("GetHandle", "");<br>
AF1.func("GetChanged", "include=" + h);</td></tr>
</table>
<br>

<div id="TagFuncTableResetChanged"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>ResetChanged</td><td class="funcTD">合并修改内容，清除Input的修改标记.</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableResetChanged"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableSetAsNewRow"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>SetAsNewRow</td><td class="funcTD">强制设置新增、修改的标识</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableSetAsNewRow"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可选，true/false - 是/否, 默认true</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>用于生成GetChangedXML( )函数的XML.<br>注：通过Load( )加载后，就不是新增行了.</td></tr>
</table>
<br>

<div id="TagFuncTableIsNewRow"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>IsNewRow</td><td class="funcTD">是否新增行</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableIsNewRow"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>1/0 - 是/否</td></tr>
  <tr><td align=right>备注</td><td colspan=2>用于生成GetChangedXML( )函数的XML.<br>注：通过Load( )加载后，就不是新增行了.</td></tr>
</table>
<br>

<div id="TagFuncTableLocate"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Locate</td><td class="funcTD">将中心位置定位到某幅图</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableLocate"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>id, 或顺序号</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>可选，true/false, true表示参数1是id，false表示参数1是顺序号(从0开始计数)，默认是true.</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableScroll"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Scroll</td><td class="funcTD">发送一个滚动消息</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableScroll"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>速率, -150至150之间，小于0表示向左滚动.</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableGetImages"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetImages</td><td class="funcTD">取得图片总数</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableGetImages"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>ImageFlow 的 Id</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>数量</td></tr>
</table>
<br>

<div id="TagFuncTableGetImageProp"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetImageProp</td><td class="funcTD">取得某个图片的属性(包括自定义属性)</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableGetImageProp"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>ImageFlow 的 Id</td></tr>
  <tr><td align=right>参数</td><td colspan=2>图片的顺序号(从0开始计数)</td></tr>
  <tr><td align=right>参数</td><td colspan=2>属性, 可以是 Id, src(或URL), tip(或Text)，或其它自定义属性</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的值</td></tr>
</table>
<br>

<div id="TagFuncTableGetImagePropById"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>GetImagePropById</td><td class="funcTD">按图片的Id取得某个图片的属性(包括自定义属性)</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableGetImagePropById"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>ImageFlow 的 Id</td></tr>
  <tr><td align=right>参数</td><td colspan=2>图片的 Id</td></tr>
  <tr><td align=right>参数</td><td colspan=2>属性, 可以是 src(或URL), tip(或Text)，或其它自定义属性</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>属性的值</td></tr>
</table>
<br>

<div id="TagFuncTableAddPath"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>AddPath</td><td class="funcTD">动态创建Path</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 19.炫酷ImageFlow(图像流)控件">&nbsp;&nbsp;<a href="#func_TagFuncTableAddPath"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>ID</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>XML串</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
</table>
<br>

<div id="TagFuncTableExport"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>Export</td><td class="funcTD">取得XML格式的数据，一般用于打印:将串作为数据源转交给Report组件.</td><td align="right" style="border-left:0px;"><img src="image/documentg.bmp" title="参见演示页: 9.有表头表体的表单(2)">&nbsp;&nbsp;<a href="#func_TagFuncTableExport"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数</td><td colspan=2>可选，可以有 content=[?]; include=[?]; metaOnly=[?]; includeHide=[?]; includeEmpty=[?] 这5个子句，含义分别为：<br>
<b>content</b>: asData表示输出内容是纯数据, asDisplay表示和界面显示的一样串，默认是asDisplay;<br>
<b>include</b>: 其它freeform的句柄，表示一起参与输出，多个句柄以逗号分隔;<br>
<b>metaOnly</b>: =true表示不含数据，仅含结构，默认是false<br>
<b>includeHide</b>: 是否包含隐藏(不可视)的输入对象，默认是true;<br>
<b>includeEmpty</b>: 是否包含空值，默认是true;<br>
</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>XML大串</td></tr>
  <tr><td align=right>备注</td><td colspan=2>返回的串的格式类似于：<br>
<pre class='xml'>
&lt;form id="business1" key="orderId" 自定义属性="?" &gt;
 &lt;row&gt;
  &lt;orderId&gt;k1020&lt;/id&gt;
  &lt;dt&gt;2011.08.01&lt;/dt&gt;
  &lt;rate&gt;6.1203&lt;/rate&gt;
  &lt;checked&gt;商业保险&lt;/checked&gt;
  &lt;city&gt;Charleroi&lt;/city&gt;
 &lt;/row&gt;
&lt;/form&gt;</pre></td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>var h = AF2.func("GetHandle","");<br>
AF.func("export", "content=asDisplay; include="+h);</td></tr>
</table>
<br>

<div id="TagFuncTableAddHotKey"></div><br>
<table width=98% cols=3 border=1 align="center"><col width=120><col><col width=64 align=right>
  <tr bgcolor=#EEF5FB><td class="funcTD" align=center>AddHotKey</td><td class="funcTD">增设快捷键。快捷键将触发HotKey事件</td><td align="right" style="border-left:0px;"><a href="#func_TagFuncTableAddHotKey"><img border=0 src="image/arrowup.gif" title="回到目录"/> </a> </td></tr>
  <tr><td align=right>参数1</td><td colspan=2>第一个快捷键，可以是F1至F12、字母、数字、或键的AscII码，也可再加Ctrl、Shift、Alt的组合，以'+'分隔.</td></tr>
  <tr><td align=right>参数2</td><td colspan=2>可选，第二个快捷键，以此类推.</td></tr>
  <tr><td align=right>返回值</td><td colspan=2>(无)</td></tr>
  <tr><td align=right>备注</td><td colspan=2>1.并不是所有键都能用作快捷的，受制于浏览器，您需要逐个测试;<br>2.快捷键将触发 HotKey 事件</td></tr>
  <tr class="example"><td align=right>示例</td><td colspan=2>AF.func("AddHotKey", "F12 \r\n Ctrl+F4 \r\n Ctrl+Shift+S \r\n Alt+5 \r\n Ctrl+32");<br>
分别表示了5个快捷键：F12、Ctrl+F4、Ctrl+Shift+S、Alt+5、Ctrl+空格(空格的AscII码是32)</td></tr>
</table>
<br>



<br><br><br>
<script type='text/javascript' src='nstd.js'></script>
</body></html>