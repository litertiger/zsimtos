<HTML>
<head>
<meta http-equiv="content-type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="temp1.css" type="text/css">
</head>
<body bgcolor=#ffffff vlink=#0000ff>
<br>
<p class="sz1">3.几个重要的属性</p><hr color=#2266ee size=1>
　　XML描述文档中，有几个元素属性比较重要，在此详细说明。<br>
<b>1</b>.Properties\<b>sort</b>: 默认初始排序，例如 sort="country a, city a"；<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">服务器返回的数据是不必预先排序的，因为Load( )后，Treelist会自动按 sort 属性进行再排序!</p>
<br>
<br>
<b>2</b>.Properties\<b>isTree</b>: Treelist是以列表显示，还是以树显示；<br>
　　如果以树显示，通常还需要设定 sort 属性，这样 sort 的列就是树杈；如果有多个列参与排序，例如 sort="country a, city a"，就会有多层树杈，这就是所谓“多列多层树”；如果不指定 sort，那么默认第一列为树杈.<br>
<br>
<br>
<b>3</b>.Properties\<b>Key</b>: 主键(包括复合主键)。如果要使GetChangedXML( )函数成功执行，必须定义主键(level级别为0除外)。并且在调用 GetChangedXML("isValidatKey=true") 提交函数时，Treelist会自动检查，遇到重复键值能自动弹出提示，并将光标跳转到相应单元格<br>
<br>
<br>
<b>4</b>.Properties\<b>dataURL</b>: 可选的属性，表示数据来源的默认URL；<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">如果定义了 dataURL 属性，那么 js 中就不需要执行 Load( ) 函数了，因为在Build( )时能自动Load( )！这一点很重要.</p>
<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">通过SetProp( )函数能更改 dataURL，更改成功后，Treelist 能立即自动刷新，相当于重新Load( ).</p>
<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">dataURL 支持表达式(以“＝”开头, <img src='image/document.bmp' title='请参见演示页: 9.各种下拉 中的经销商下拉'>).</p>
<br>
<br>
<b>5</b>.Cols\col\<b>isUnique</b> 和 Cols\col\<b>nullAble</b>: 如果定义了此属性，在 <a href="treelist10.htm#TagFuncTableGetChangedXML" target=_blank>GetChangedXML( )</a> 函数执行期间，Treelist会自动检查，遇到重复主键能自动弹出提示，并将光标跳转到相应单元格；<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">隐藏列是不作nullAble、isUnique检查的.</p>
<br>
<br>
<b>6</b>.Cols \ Col \ <b>displayMask</b>: 显示掩码，语法为"表达式; textColor=表达式; backColor=表达式; leftImage=表达式; rightImage=表达式"。这当中相当于有5个分句，分别表示了文字、文字颜色、背景色、左侧图标、右侧图标的独立表达式，相互之间以分号(;)分隔。<br>
　　表达式中可以包含列名(包括其它列的列名)，表示引用本行中其它列的内容，并允许用“data”代表本单元格的数据.<br>
　　关于表达式的书写规则，在下面的<a href="pub01.htm" target=_blank>公共内容</a>中有详细说明，也有大量的演示页可供参考(<img src='image/document.bmp' title='请参见演示页: 5.图文并茂(2)、11.显示掩码'>)。<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">&lt;Properties&gt;中也有同名的DisplayMask属性，但&lt;Properties&gt; 的 displayMask 作用域是整个行，且只有 backColor 和 textColor 二种表达式分句.</p>
<br>
<br>
<b>7</b>.Properties\<b>ref</b>、Background\<b>ref</b>、Fons\<b>ref</b>: 引用外部XML描述文件的相关内容，例如 &lt;Background ref="../Common/thc.xml"&gt;，本Background内容将从thc.xml中取得，这样做的好处是很容易统一更改外观.<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">外部属性将被自动添加到本 XML 中，本 XML 的已有属性不会被替换.</p>
<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">不支持多重嵌套引用.</p>


<br><br><br>
<script type='text/javascript' src='nstd.js'></script>
</body></html>