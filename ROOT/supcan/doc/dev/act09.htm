<HTML>
<head><title>9.函数</title>
<meta http-equiv="content-type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="temp1.css" type="text/css">
</head>
<body bgcolor=#ffffff vlink=#0000ff>
<br>
<p class='sz1'>9.函数</p><hr color=#2266ee size=1>
　　插件/加载项可供 js 使用的函数只有1个，暴露给页面的javascript 格式如下：<br>
<h2>　　func(funcname, para)</h2>
　　<b>参数funcname</b>：字符串，是组件的真正的函数名，请参见具体组件的规范;<br>
　　<b>参数para</b>：字符串，参数，如果组件需要传入多个参数，那么以回车符(\r\n)分隔，请参见具体组件的规范;<br>
　　<b>返回值</b>：字符串，具体含义请参见组件的规范;<br>

<br>
　　插件/加载项本身并不执行这个函数，真正执行该函数的是具体的功能组件，插件/加载项只是把函数传递给组件、将组件的返回值再传回给js，函数的js用法举例如下：<br>
　　假如有个函数的声明是 <font color='#006f73'> int print(String, double, boolean) </font>, 用常规语言(如C#、Java)书写, 可能是类似这样的：<br>
<pre class='cpp'>
int ret = print("A", 12.45, true);</pre>
　　如果用硕正的规则来书写js，则应该写成：<br>
<pre class='cpp'>
var ret = AF.func("print", "A\r\n12.45\r\ntrue");</pre>
　　为了提高可读性，您可以在 "\r\n" 的左右增加空格，硕正组件在调用时会自动将其剔除的：<br>
<pre class='cpp'>
var ret = AF.func("print", "A \r\n 12.45 \r\n true");</pre>

注: AF为组件的id(&lt;Object id=<font color=red><b>?</b></font> ...&gt;)，在Firefox/Chrome中没有必要采用document.getElementById('AF')；<br>
<br>
　　硕正功能组件的函数是相当丰富的，在各自的文档中有详细的介绍，并且在硕正的在线演示页中都有大量的实际例子, 在此不再展开。<br>
<br>
<img src='image/glass.bmp' class="imgleft"><p class="glass">第二个参数 (para) 是不能忽略的，如果组件函数文档中某些个函数声明是无参数的，也必须用空串表示, 比如 AF.func("GetRows", ""), 不能写成 AF.func("GetRows").</p>


<br><br><br>
<script type='text/javascript' src='nstd.js'></script>
</body></html>