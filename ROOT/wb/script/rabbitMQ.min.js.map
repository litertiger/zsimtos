{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///rabbitMQ.min.js","webpack:///webpack/bootstrap 36dda583c7ad834f95bb","webpack:///./src/mainRabbitMQ.js","webpack:///./src/rabbitMQ.js","webpack:///./src/stomp.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","RabbitMQ","undefined","_rabbitMQ","_rabbitMQ2","_classCallCheck","instance","Constructor","TypeError","reconnect","mq","console","log","client","ws","readyState","_cleanUp","debug","onreceive","WebSocket","url","_stomp2","over","connect","usr","passwd","subCallBack","des","subscribe","callback","host","onclose","_createClass","defineProperties","target","props","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_stomp","_this","rpcCallBack","connected","onConnected","onError","count","frame","headers","rpc_id","destination","sub","r","unsubscribe","body","send","reply-to","set","cb","Byte","Client","Frame","Stomp","_typeof","Symbol","iterator","constructor","__hasProp","hasOwnProperty","__slice","slice","LF","NULL","unmarshallSingle","data","chr","command","divider","headerLines","idx","len","line","start","trim","_i","_j","_len","_ref","_ref1","search","RegExp","substring","split","shift","str","replace","reverse","indexOf","parseInt","charAt","test","j","JSON","parse","e","lines","name","skipContentLength","push","stringify","sizeOfUTF8","join","s","encodeURI","match","datas","frames","last_frame","partial","_results","toString","now","Date","valueOf","binaryType","counter","heartbeat","outgoing","incoming","maxWebSocketFrameSize","subscriptions","partialData","out","marshall","serverIncoming","serverOutgoing","ttl","v","version","VERSIONS","V1_1","V1_2","Math","max","pinger","setInterval","args","connectCallback","errorCallback","arguments","Function","login","passcode","_parseConnect","apply","onmessage","evt","arr","messageID","subscription","unmarshalledData","ArrayBuffer","Uint8Array","String","fromCharCode","serverActivity","unmarshall","server","_setupHeartbeat","ack","nack","onreceipt","msg","onopen","supportedVersions","_transmit","disconnectCallback","close","clearInterval","ponger","transaction","txid","commit","abort","V1_0","protocols","klass","WebSocketClass","interval","f","window"],"mappings":"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","file":"rabbitMQ.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.RabbitMQ = undefined;\n\t\n\tvar _rabbitMQ = __webpack_require__(1);\n\t\n\tvar _rabbitMQ2 = _interopRequireDefault(_rabbitMQ);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar RabbitMQ = exports.RabbitMQ = _rabbitMQ2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _stomp = __webpack_require__(2);\n\t\n\tvar _stomp2 = _interopRequireDefault(_stomp);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction reconnect(mq) {\n\t\tconsole.log(mq.client.ws);\n\t\tif (mq.client.ws.readyState != 3) return;\n\t\tmq.client._cleanUp();\n\t\tvar debug = mq.client.debug;\n\t\tvar onreceive = mq.client.onreceive;\n\t\tvar ws = new WebSocket(mq.url);\n\t\tmq.client = _stomp2.default.over(ws);\n\t\tmq.client.debug = debug;\n\t\tmq.client.onreceive = onreceive;\n\t\tmq.client.connect(mq.usr, mq.passwd, function () {\n\t\t\tconsole.log('reconnect to ' + mq.url);\n\t\t\tvar subCallBack = mq.subCallBack;\n\t\t\tmq.subCallBack = {};\n\t\t\tfor (var des in subCallBack) {\n\t\t\t\tmq.subscribe(des, subCallBack[des].callback);\n\t\t\t}\n\t\t}, function () {\n\t\t\treturn console.log('error');\n\t\t}, mq.host);\n\t\tws.onclose = function () {\n\t\t\treturn reconnect(mq);\n\t\t};\n\t\tconsole.log(mq.client.ws);\n\t}\n\t\n\tvar RabbitMQ = function () {\n\t\tfunction RabbitMQ(url, usr, passwd, host) {\n\t\t\tvar _this = this;\n\t\n\t\t\t_classCallCheck(this, RabbitMQ);\n\t\n\t\t\tthis.url = url;\n\t\t\tthis.usr = usr;\n\t\t\tthis.passwd = passwd;\n\t\t\tthis.host = host;\n\t\t\tvar ws = new WebSocket(url);\n\t\t\tthis.rpcCallBack = {};\n\t\t\tthis.subCallBack = {};\n\t\t\tthis.client = _stomp2.default.over(ws);\n\t\t\tthis.client.connect(usr, passwd, function () {\n\t\t\t\tconsole.log('connect to ' + url);\n\t\t\t\t_this.connected = true;\n\t\t\t\tif (_this.onConnected) _this.onConnected();\n\t\t\t}, function () {\n\t\t\t\tconsole.log('error');\n\t\t\t\tif (_this.onError) _this.onError();\n\t\t\t}, host);\n\t\t\tthis.count = 1;\n\t\t\tthis.onreceive = function (frame) {\n\t\t\t\tvar callback = null;\n\t\t\t\tif (frame.headers.rpc_id && (callback = _this.rpcCallBack[frame.headers.rpc_id])) {\n\t\t\t\t\tcallback(frame);\n\t\t\t\t\tdelete _this.rpcCallBack[frame.headers.rpc_id];\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('unhandled message:');\n\t\t\t\t\tconsole.log(frame);\n\t\t\t\t}\n\t\t\t};\n\t\t\tws.onclose = function () {\n\t\t\t\treturn reconnect(_this);\n\t\t\t};\n\t\t}\n\t\n\t\t_createClass(RabbitMQ, [{\n\t\t\tkey: 'subscribe',\n\t\t\tvalue: function subscribe(destination, callback) {\n\t\t\t\tvar sub = this.client.subscribe(destination, callback);\n\t\t\t\tsub.destination = destination;\n\t\t\t\tthis.subCallBack[destination] = { callback: callback, id: sub.id };\n\t\t\t\treturn sub;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'unsubscribe',\n\t\t\tvalue: function unsubscribe(destination) {\n\t\t\t\tvar r = this.subCallBack[destination];\n\t\t\t\tif (r) {\n\t\t\t\t\tthis.client.unsubscribe(r.id);\n\t\t\t\t\tdelete this.subCallBack[destination];\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'send',\n\t\t\tvalue: function send(destination, body) {\n\t\t\t\treturn this.client.send(destination, null, body);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'call',\n\t\t\tvalue: function call(destination, body, callback) {\n\t\t\t\tvar headers = { \"reply-to\": \"/temp-queue/rpc\", rpc_id: this.count };\n\t\t\t\tthis.rpcCallBack[this.count++] = callback;\n\t\t\t\treturn this.client.send(destination, headers, body);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'debug',\n\t\t\tset: function set(cb) {\n\t\t\t\tthis.client.debug = cb;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'onreceive',\n\t\t\tset: function set(cb) {\n\t\t\t\tthis.client.onreceive = cb;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn RabbitMQ;\n\t}();\n\t\n\texports.default = RabbitMQ;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Byte,\n\t    Client,\n\t    Frame,\n\t    Stomp,\n\t    __hasProp = {}.hasOwnProperty,\n\t    __slice = [].slice;\n\tByte = {\n\t    LF: '\\x0A',\n\t    NULL: '\\x00'\n\t};\n\t\n\tFrame = function () {\n\t    function unmarshallSingle(data) {\n\t        var body, chr, command, divider, headerLines, headers, i, idx, len, line, start, trim, _i, _j, _len, _ref, _ref1;\n\t        divider = data.search(RegExp(\"\" + Byte.LF + Byte.LF));\n\t        headerLines = data.substring(0, divider).split(Byte.LF);\n\t        command = headerLines.shift();\n\t        headers = {};\n\t        trim = function trim(str) {\n\t            return str.replace(/^\\s+|\\s+$/g, '');\n\t        };\n\t        _ref = headerLines.reverse();\n\t        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t            line = _ref[_i];\n\t            idx = line.indexOf(':');\n\t            headers[trim(line.substring(0, idx))] = trim(line.substring(idx + 1));\n\t        }\n\t        body = '';\n\t        start = divider + 2;\n\t        if (headers['content-length']) {\n\t            len = parseInt(headers['content-length']);\n\t            body = ('' + data).substring(start, start + len);\n\t        } else {\n\t            chr = null;\n\t            for (i = _j = start, _ref1 = data.length; start <= _ref1 ? _j < _ref1 : _j > _ref1; i = start <= _ref1 ? ++_j : --_j) {\n\t                chr = data.charAt(i);\n\t                if (chr === Byte.NULL) {\n\t                    break;\n\t                }\n\t                body += chr;\n\t            }\n\t        }\n\t        return new Frame(command, headers, body);\n\t    }\n\t\n\t    var Frame = function () {\n\t        function Frame(command, headers, body) {\n\t            _classCallCheck(this, Frame);\n\t\n\t            this.command = command;\n\t            this.headers = headers != null ? headers : {};\n\t            try {\n\t                if (command === \"MESSAGE\" && typeof body === \"string\" && /^\\s*(\\{.*\\}|\\[.*\\])\\s*$/.test(body)) {\n\t                    var j = JSON.parse(body);\n\t                    if (j) body = j;\n\t                }\n\t            } catch (e) {}\n\t            this.body = body != null ? body : '';\n\t        }\n\t\n\t        _createClass(Frame, [{\n\t            key: 'toString',\n\t            value: function toString() {\n\t                var lines, name, skipContentLength, value, _ref;\n\t                lines = [this.command];\n\t                skipContentLength = this.headers['content-length'] === false ? true : false;\n\t                if (skipContentLength) {\n\t                    delete this.headers['content-length'];\n\t                }\n\t                _ref = this.headers;\n\t                for (name in _ref) {\n\t                    if (!__hasProp.call(_ref, name)) continue;\n\t                    value = _ref[name];\n\t                    lines.push(\"\" + name + \":\" + value);\n\t                }\n\t                var body = this.body;\n\t                if (body && (typeof body === 'undefined' ? 'undefined' : _typeof(body)) === \"object\") body = JSON.stringify(body);\n\t                if (body && !skipContentLength) {\n\t                    lines.push(\"content-length:\" + Frame.sizeOfUTF8(body));\n\t                }\n\t                lines.push(Byte.LF + body);\n\t                return lines.join(Byte.LF);\n\t            }\n\t        }], [{\n\t            key: 'sizeOfUTF8',\n\t            value: function sizeOfUTF8(s) {\n\t                if (s) {\n\t                    return encodeURI(s).match(/%..|./g).length;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            }\n\t        }, {\n\t            key: 'unmarshall',\n\t            value: function unmarshall(datas) {\n\t                var frame, frames, last_frame, r;\n\t                frames = datas.split(RegExp(\"\" + Byte.NULL + Byte.LF + \"*\"));\n\t                r = {\n\t                    frames: [],\n\t                    partial: ''\n\t                };\n\t                r.frames = function () {\n\t                    var _i, _len, _ref, _results;\n\t                    _ref = frames.slice(0, -1);\n\t                    _results = [];\n\t                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t                        frame = _ref[_i];\n\t                        _results.push(unmarshallSingle(frame));\n\t                    }\n\t                    return _results;\n\t                }();\n\t                last_frame = frames.slice(-1)[0];\n\t                if (last_frame === Byte.LF || last_frame.search(RegExp(\"\" + Byte.NULL + Byte.LF + \"*$\")) !== -1) {\n\t                    r.frames.push(unmarshallSingle(last_frame));\n\t                } else {\n\t                    r.partial = last_frame;\n\t                }\n\t                return r;\n\t            }\n\t        }, {\n\t            key: 'marshall',\n\t            value: function marshall(command, headers, body) {\n\t                var frame;\n\t                frame = new Frame(command, headers, body);\n\t                return frame.toString() + Byte.NULL;\n\t            }\n\t        }]);\n\t\n\t        return Frame;\n\t    }();\n\t\n\t    return Frame;\n\t}();\n\t\n\tClient = function () {\n\t    function now() {\n\t        if (Date.now) {\n\t            return Date.now();\n\t        } else {\n\t            return new Date().valueOf;\n\t        }\n\t    }\n\t\n\t    var Client = function () {\n\t        function Client(ws) {\n\t            _classCallCheck(this, Client);\n\t\n\t            this.ws = ws;\n\t            this.ws.binaryType = \"arraybuffer\";\n\t            this.counter = 0;\n\t            this.connected = false;\n\t            this.heartbeat = {\n\t                outgoing: 10000,\n\t                incoming: 10000\n\t            };\n\t            this.maxWebSocketFrameSize = 16 * 1024;\n\t            this.subscriptions = {};\n\t            this.partialData = '';\n\t            this.debug = null;\n\t        }\n\t\n\t        _createClass(Client, [{\n\t            key: '_transmit',\n\t            value: function _transmit(command, headers, body) {\n\t                var out;\n\t                out = Frame.marshall(command, headers, body);\n\t                if (typeof this.debug === \"function\") {\n\t                    this.debug(\">>> \" + out);\n\t                }\n\t                while (true) {\n\t                    if (out.length > this.maxWebSocketFrameSize) {\n\t                        this.ws.send(out.substring(0, this.maxWebSocketFrameSize));\n\t                        out = out.substring(this.maxWebSocketFrameSize);\n\t                        if (typeof this.debug === \"function\") {\n\t                            this.debug(\"remaining = \" + out.length);\n\t                        }\n\t                    } else {\n\t                        return this.ws.send(out);\n\t                    }\n\t                }\n\t            }\n\t        }, {\n\t            key: '_setupHeartbeat',\n\t            value: function _setupHeartbeat(headers) {\n\t                var serverIncoming, serverOutgoing, ttl, v, _ref, _ref1;\n\t                if ((_ref = headers.version) !== Stomp.VERSIONS.V1_1 && _ref !== Stomp.VERSIONS.V1_2) {\n\t                    return;\n\t                }\n\t                _ref1 = function () {\n\t                    var _i, _len, _ref1, _results;\n\t                    _ref1 = headers['heart-beat'].split(\",\");\n\t                    _results = [];\n\t                    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n\t                        v = _ref1[_i];\n\t                        _results.push(parseInt(v));\n\t                    }\n\t                    return _results;\n\t                }(), serverOutgoing = _ref1[0], serverIncoming = _ref1[1];\n\t                if (!(this.heartbeat.outgoing === 0 || serverIncoming === 0)) {\n\t                    ttl = Math.max(this.heartbeat.outgoing, serverIncoming);\n\t                    if (typeof this.debug === \"function\") {\n\t                        this.debug(\"send PING every \" + ttl + \"ms\");\n\t                    }\n\t                    this.pinger = Stomp.setInterval(ttl, function (_this) {\n\t                        return function () {\n\t                            _this.ws.send(Byte.LF);\n\t                            return typeof _this.debug === \"function\" ? _this.debug(\">>> PING\") : void 0;\n\t                        };\n\t                    }(this));\n\t                }\n\t                if (!(this.heartbeat.incoming === 0 || serverOutgoing === 0)) {\n\t                    ttl = Math.max(this.heartbeat.incoming, serverOutgoing);\n\t                    if (typeof this.debug === \"function\") {\n\t                        this.debug(\"check PONG every \" + ttl + \"ms\");\n\t                    }\n\t                    //        return this.ponger = Stomp.setInterval(ttl, (function(_this) {\n\t                    //          return function() {\n\t                    //            var delta;\n\t                    //            delta = now() - _this.serverActivity;\n\t                    //            if (delta > ttl * 2) {\n\t                    //              if (typeof _this.debug === \"function\") {\n\t                    //                _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n\t                    //              }\n\t                    //              return _this.ws.close();\n\t                    //            }\n\t                    //          };\n\t                    //        })(this));\n\t                }\n\t            }\n\t        }, {\n\t            key: '_parseConnect',\n\t            value: function _parseConnect() {\n\t                var args, connectCallback, errorCallback, headers;\n\t                args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t                headers = {};\n\t                switch (args.length) {\n\t                    case 2:\n\t                        headers = args[0], connectCallback = args[1];\n\t                        break;\n\t                    case 3:\n\t                        if (args[1] instanceof Function) {\n\t                            headers = args[0], connectCallback = args[1], errorCallback = args[2];\n\t                        } else {\n\t                            headers.login = args[0], headers.passcode = args[1], connectCallback = args[2];\n\t                        }\n\t                        break;\n\t                    case 4:\n\t                        headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3];\n\t                        break;\n\t                    default:\n\t                        headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], headers.host = args[4];\n\t                }\n\t                return [headers, connectCallback, errorCallback];\n\t            }\n\t        }, {\n\t            key: 'connect',\n\t            value: function connect() {\n\t                var args, errorCallback, headers, out;\n\t                args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t                out = this._parseConnect.apply(this, args);\n\t                headers = out[0], this.connectCallback = out[1], errorCallback = out[2];\n\t                if (typeof this.debug === \"function\") {\n\t                    this.debug(\"Opening Web Socket...\");\n\t                }\n\t                this.ws.onmessage = function (_this) {\n\t                    return function (evt) {\n\t                        var arr, c, client, data, frame, messageID, onreceive, subscription, unmarshalledData, _i, _len, _ref, _results;\n\t                        data = typeof ArrayBuffer !== 'undefined' && evt.data instanceof ArrayBuffer ? (arr = new Uint8Array(evt.data), typeof _this.debug === \"function\" ? _this.debug(\"--- got data length: \" + arr.length) : void 0, function () {\n\t                            var _i, _len, _results;\n\t                            _results = [];\n\t                            for (_i = 0, _len = arr.length; _i < _len; _i++) {\n\t                                c = arr[_i];\n\t                                _results.push(String.fromCharCode(c));\n\t                            }\n\t                            return _results;\n\t                        }().join('')) : evt.data;\n\t                        _this.serverActivity = now();\n\t                        if (data === Byte.LF) {\n\t                            if (typeof _this.debug === \"function\") {\n\t                                _this.debug(\"<<< PONG\");\n\t                            }\n\t                            return;\n\t                        }\n\t                        if (typeof _this.debug === \"function\") {\n\t                            _this.debug(\"<<< \" + data);\n\t                        }\n\t                        unmarshalledData = Frame.unmarshall(_this.partialData + data);\n\t                        _this.partialData = unmarshalledData.partial;\n\t                        _ref = unmarshalledData.frames;\n\t                        _results = [];\n\t\n\t                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n\t                            frame = _ref[_i];\n\t                            switch (frame.command) {\n\t                                case \"CONNECTED\":\n\t                                    if (typeof _this.debug === \"function\") {\n\t                                        _this.debug(\"connected to server \" + frame.headers.server);\n\t                                    }\n\t                                    _this.connected = true;\n\t                                    _this._setupHeartbeat(frame.headers);\n\t                                    _results.push(typeof _this.connectCallback === \"function\" ? _this.connectCallback(frame) : void 0);\n\t                                    break;\n\t                                case \"MESSAGE\":\n\t                                    subscription = frame.headers.subscription;\n\t                                    onreceive = _this.subscriptions[subscription] || _this.onreceive;\n\t                                    if (onreceive) {\n\t                                        client = _this;\n\t                                        messageID = frame.headers[\"message-id\"];\n\t                                        frame.ack = function (headers) {\n\t                                            if (headers == null) {\n\t                                                headers = {};\n\t                                            }\n\t                                            return client.ack(messageID, subscription, headers);\n\t                                        };\n\t                                        frame.nack = function (headers) {\n\t                                            if (headers == null) {\n\t                                                headers = {};\n\t                                            }\n\t                                            return client.nack(messageID, subscription, headers);\n\t                                        };\n\t                                        _results.push(onreceive(frame));\n\t                                    } else {\n\t                                        _results.push(typeof _this.debug === \"function\" ? _this.debug(\"Unhandled received MESSAGE: \" + frame) : void 0);\n\t                                    }\n\t                                    break;\n\t                                case \"RECEIPT\":\n\t                                    _results.push(typeof _this.onreceipt === \"function\" ? _this.onreceipt(frame) : void 0);\n\t                                    break;\n\t                                case \"ERROR\":\n\t                                    _results.push(typeof errorCallback === \"function\" ? errorCallback(frame) : void 0);\n\t                                    break;\n\t                                default:\n\t                                    _results.push(typeof _this.debug === \"function\" ? _this.debug(\"Unhandled frame: \" + frame) : void 0);\n\t                            }\n\t                        }\n\t                        return _results;\n\t                    };\n\t                }(this);\n\t\n\t                this.ws.onclose = function (_this) {\n\t                    return function () {\n\t                        var msg;\n\t                        msg = \"Whoops! Lost connection to \" + _this.ws.url;\n\t                        if (typeof _this.debug === \"function\") {\n\t                            _this.debug(msg);\n\t                        }\n\t                        _this._cleanUp();\n\t                        return typeof errorCallback === \"function\" ? errorCallback(msg) : void 0;\n\t                    };\n\t                }(this);\n\t                return this.ws.onopen = function (_this) {\n\t                    return function () {\n\t                        if (typeof _this.debug === \"function\") {\n\t                            _this.debug('Web Socket Opened...');\n\t                        }\n\t                        headers[\"accept-version\"] = Stomp.VERSIONS.supportedVersions();\n\t                        headers[\"heart-beat\"] = [_this.heartbeat.outgoing, _this.heartbeat.incoming].join(',');\n\t                        return _this._transmit(\"CONNECT\", headers);\n\t                    };\n\t                }(this);\n\t            }\n\t        }, {\n\t            key: 'disconnect',\n\t            value: function disconnect(disconnectCallback, headers) {\n\t                if (headers == null) {\n\t                    headers = {};\n\t                }\n\t                this._transmit(\"DISCONNECT\", headers);\n\t                this.ws.onclose = null;\n\t                this.ws.close();\n\t                this._cleanUp();\n\t                return typeof disconnectCallback === \"function\" ? disconnectCallback() : void 0;\n\t            }\n\t        }, {\n\t            key: '_cleanUp',\n\t            value: function _cleanUp() {\n\t                this.connected = false;\n\t                if (this.pinger) {\n\t                    Stomp.clearInterval(this.pinger);\n\t                }\n\t                if (this.ponger) {\n\t                    return Stomp.clearInterval(this.ponger);\n\t                }\n\t            }\n\t        }, {\n\t            key: 'send',\n\t            value: function send(destination, headers, body) {\n\t                if (headers == null) {\n\t                    headers = {};\n\t                }\n\t                if (body == null) {\n\t                    body = '';\n\t                }\n\t                headers.destination = destination;\n\t                return this._transmit(\"SEND\", headers, body);\n\t            }\n\t        }, {\n\t            key: 'subscribe',\n\t            value: function subscribe(destination, callback, headers) {\n\t                var client;\n\t                if (headers == null) {\n\t                    headers = {};\n\t                }\n\t                if (!headers.id) {\n\t                    headers.id = \"sub-\" + this.counter++;\n\t                }\n\t                headers.destination = destination;\n\t                this.subscriptions[headers.id] = callback;\n\t                this._transmit(\"SUBSCRIBE\", headers);\n\t                client = this;\n\t                return {\n\t                    id: headers.id,\n\t                    unsubscribe: function unsubscribe() {\n\t                        return client.unsubscribe(headers.id);\n\t                    }\n\t                };\n\t            }\n\t        }, {\n\t            key: 'unsubscribe',\n\t            value: function unsubscribe(id) {\n\t                delete this.subscriptions[id];\n\t                return this._transmit(\"UNSUBSCRIBE\", {\n\t                    id: id\n\t                });\n\t            }\n\t        }, {\n\t            key: 'begin',\n\t            value: function begin(transaction) {\n\t                var client, txid;\n\t                txid = transaction || \"tx-\" + this.counter++;\n\t                this._transmit(\"BEGIN\", {\n\t                    transaction: txid\n\t                });\n\t                client = this;\n\t                return {\n\t                    id: txid,\n\t                    commit: function commit() {\n\t                        return client.commit(txid);\n\t                    },\n\t                    abort: function abort() {\n\t                        return client.abort(txid);\n\t                    }\n\t                };\n\t            }\n\t        }, {\n\t            key: 'commit',\n\t            value: function commit(transaction) {\n\t                return this._transmit(\"COMMIT\", {\n\t                    transaction: transaction\n\t                });\n\t            }\n\t        }, {\n\t            key: 'abort',\n\t            value: function abort(transaction) {\n\t                return this._transmit(\"ABORT\", {\n\t                    transaction: transaction\n\t                });\n\t            }\n\t        }, {\n\t            key: 'ack',\n\t            value: function ack(messageID, subscription, headers) {\n\t                if (headers == null) {\n\t                    headers = {};\n\t                }\n\t                headers[\"message-id\"] = messageID;\n\t                headers.subscription = subscription;\n\t                return this._transmit(\"ACK\", headers);\n\t            }\n\t        }, {\n\t            key: 'nack',\n\t            value: function nack(messageID, subscription, headers) {\n\t                if (headers == null) {\n\t                    headers = {};\n\t                }\n\t                headers[\"message-id\"] = messageID;\n\t                headers.subscription = subscription;\n\t                return this._transmit(\"NACK\", headers);\n\t            }\n\t        }]);\n\t\n\t        return Client;\n\t    }();\n\t\n\t    return Client;\n\t}();\n\t\n\tStomp = {\n\t    VERSIONS: {\n\t        V1_0: '1.0',\n\t        V1_1: '1.1',\n\t        V1_2: '1.2',\n\t        supportedVersions: function supportedVersions() {\n\t            return '1.1,1.0';\n\t        }\n\t    },\n\t    client: function client(url, protocols) {\n\t        var klass, ws;\n\t        if (protocols == null) {\n\t            protocols = ['v10.stomp', 'v11.stomp'];\n\t        }\n\t        klass = Stomp.WebSocketClass || WebSocket;\n\t        ws = new klass(url, protocols);\n\t        return new Client(ws);\n\t    },\n\t    over: function over(ws) {\n\t        return new Client(ws);\n\t    },\n\t    Frame: Frame,\n\t    setInterval: function setInterval(interval, f) {\n\t        return window.setInterval(f, interval);\n\t    },\n\t    clearInterval: function clearInterval(id) {\n\t        return window.clearInterval(id);\n\t    }\n\t};\n\t\n\texports.default = Stomp;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// rabbitMQ.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 36dda583c7ad834f95bb","import rmq from \"./rabbitMQ.js\"\r\nexport  var RabbitMQ = rmq\n\n\n// WEBPACK FOOTER //\n// ./src/mainRabbitMQ.js","import Stomp from \"./stomp\"\r\nfunction reconnect(mq)\r\n{\r\n\tconsole.log(mq.client.ws)\r\n\tif(mq.client.ws.readyState != 3)\r\n\t\treturn\r\n\tmq.client._cleanUp()\r\n\tvar debug = mq.client.debug\r\n\tvar onreceive = mq.client.onreceive\r\n\tvar ws = new WebSocket(mq.url)\r\n\tmq.client = Stomp.over(ws)\r\n\tmq.client.debug = debug\r\n\tmq.client.onreceive = onreceive\r\n\tmq.client.connect(mq.usr, mq.passwd, ()=>{\r\n\t\tconsole.log(`reconnect to ${mq.url}`)\r\n\t\tvar subCallBack = mq.subCallBack\r\n\t\tmq.subCallBack = {}\r\n\t\tfor (var des in subCallBack)\r\n\t\t\tmq.subscribe(des, subCallBack[des].callback)\r\n\t}, ()=> console.log('error'), mq.host)\r\n\tws.onclose =  ()=>reconnect(mq)\r\n\tconsole.log(mq.client.ws)\r\n}\r\nexport default class RabbitMQ {\r\n\tconstructor(url,usr,passwd,host){\r\n\t\tthis.url = url\r\n\t\tthis.usr=usr\r\n\t\tthis.passwd = passwd\r\n\t\tthis.host = host\r\n\t\tvar ws = new WebSocket(url)\r\n\t\tthis.rpcCallBack = {}\r\n\t\tthis.subCallBack = {}\r\n\t\tthis.client = Stomp.over(ws)\r\n\t\tthis.client.connect(usr, passwd, ()=>{\r\n\t\t\t\tconsole.log(`connect to ${url}`)\r\n\t\t\t\tthis.connected = true;\r\n\t\t\t\tif(this.onConnected)\r\n\t\t\t\t\tthis.onConnected()\r\n\t\t\t}, ()=> {\r\n\t\t\t\tconsole.log('error')\r\n\t\t\t\tif(this.onError)\r\n\t\t\t\t\tthis.onError()\r\n\t\t\t}\r\n\t\t\t, host)\r\n\t\tthis.count = 1\r\n\t\tthis.onreceive = frame=>{\r\n\t\t\tlet callback = null\r\n\t\t\tif(frame.headers.rpc_id && (callback = this.rpcCallBack[frame.headers.rpc_id])){\r\n\t\t\t\tcallback(frame);\r\n\t\t\t\tdelete this.rpcCallBack[frame.headers.rpc_id]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log('unhandled message:')\r\n\t\t\t\tconsole.log(frame)\r\n\t\t\t}\r\n\t\t}\r\n\t\tws.onclose =  ()=>reconnect(this)\r\n\t}\r\n\tsubscribe(destination,callback){\r\n\t\tvar sub = this.client.subscribe(destination,callback)\r\n\t\tsub.destination = destination\r\n\t\tthis.subCallBack[destination] = {callback,id:sub.id}\r\n\t\treturn sub\r\n\t}\r\n\tunsubscribe(destination){\r\n\t\tvar r = this.subCallBack[destination]\r\n\t\tif(r) {\r\n\t\t\tthis.client.unsubscribe(r.id)\r\n\t\t\tdelete this.subCallBack[destination]\r\n\t\t}\r\n\t}\r\n\tsend(destination, body){\r\n\t\treturn this.client.send(destination,null,body);\r\n\t}\r\n\tcall(destination,body,callback){\r\n\t\tlet headers = {\"reply-to\":\"/temp-queue/rpc\",rpc_id:this.count}\r\n\t\tthis.rpcCallBack[this.count++] = callback\r\n\t\treturn this.client.send(destination,headers,body);\r\n\t}\r\n\tset debug(cb){\r\n\t\tthis.client.debug = cb\r\n\t}\r\n\tset onreceive(cb){\r\n\t\tthis.client.onreceive = cb\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/rabbitMQ.js","var Byte, Client, Frame, Stomp, __hasProp = {}.hasOwnProperty, __slice = [].slice;\r\nByte = {\r\n    LF: '\\x0A',\r\n    NULL: '\\x00'\r\n};\r\n\r\nFrame = (function() {\r\n    function unmarshallSingle(data) {\r\n        var body, chr, command, divider, headerLines, headers, i, idx, len, line, start, trim, _i, _j, _len, _ref, _ref1;\r\n        divider = data.search(RegExp(\"\" + Byte.LF + Byte.LF));\r\n        headerLines = data.substring(0, divider).split(Byte.LF);\r\n        command = headerLines.shift();\r\n        headers = {};\r\n        trim = function(str) {\r\n            return str.replace(/^\\s+|\\s+$/g, '');\r\n        };\r\n        _ref = headerLines.reverse();\r\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n            line = _ref[_i];\r\n            idx = line.indexOf(':');\r\n            headers[trim(line.substring(0, idx))] = trim(line.substring(idx + 1));\r\n        }\r\n        body = '';\r\n        start = divider + 2;\r\n        if (headers['content-length']) {\r\n            len = parseInt(headers['content-length']);\r\n            body = ('' + data).substring(start, start + len);\r\n        } else {\r\n            chr = null;\r\n            for (i = _j = start, _ref1 = data.length; start <= _ref1 ? _j < _ref1 : _j > _ref1; i = start <= _ref1 ? ++_j : --_j) {\r\n                chr = data.charAt(i);\r\n                if (chr === Byte.NULL) {\r\n                    break;\r\n                }\r\n                body += chr;\r\n            }\r\n        }\r\n        return new Frame(command, headers, body);\r\n    }\r\n\r\n    class Frame {\r\n        constructor(command, headers, body) {\r\n            this.command = command;\r\n            this.headers = headers != null ? headers : {};\r\n            try{\r\n                if(command === \"MESSAGE\" && typeof body === \"string\" && /^\\s*(\\{.*\\}|\\[.*\\])\\s*$/.test(body)) {\r\n                    var j = JSON.parse(body);\r\n                    if (j)\r\n                        body = j\r\n                }\r\n            }\r\n            catch(e){\r\n            }\r\n            this.body = body != null ? body : '';\r\n        }\r\n\r\n        toString() {\r\n            var lines, name, skipContentLength, value, _ref;\r\n            lines = [this.command];\r\n            skipContentLength = this.headers['content-length'] === false ? true : false;\r\n            if (skipContentLength) {\r\n                delete this.headers['content-length'];\r\n            }\r\n            _ref = this.headers;\r\n            for (name in _ref) {\r\n                if (!__hasProp.call(_ref, name)) continue;\r\n                value = _ref[name];\r\n                lines.push(\"\" + name + \":\" + value);\r\n            }\r\n            var body = this.body;\r\n            if(body && typeof body === \"object\")\r\n                body = JSON.stringify(body);\r\n            if (body && !skipContentLength) {\r\n                lines.push(\"content-length:\" + (Frame.sizeOfUTF8(body)));\r\n            }\r\n            lines.push(Byte.LF + body);\r\n            return lines.join(Byte.LF);\r\n        }\r\n\r\n        static sizeOfUTF8(s) {\r\n            if (s) {\r\n                return encodeURI(s).match(/%..|./g).length;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n        static unmarshall(datas) {\r\n            var frame, frames, last_frame, r;\r\n            frames = datas.split(RegExp(\"\" + Byte.NULL + Byte.LF + \"*\"));\r\n            r = {\r\n                frames: [],\r\n                partial: ''\r\n            };\r\n            r.frames = (function () {\r\n                var _i, _len, _ref, _results;\r\n                _ref = frames.slice(0, -1);\r\n                _results = [];\r\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                    frame = _ref[_i];\r\n                    _results.push(unmarshallSingle(frame));\r\n                }\r\n                return _results;\r\n            })();\r\n            last_frame = frames.slice(-1)[0];\r\n            if (last_frame === Byte.LF || (last_frame.search(RegExp(\"\" + Byte.NULL + Byte.LF + \"*$\"))) !== -1) {\r\n                r.frames.push(unmarshallSingle(last_frame));\r\n            } else {\r\n                r.partial = last_frame;\r\n            }\r\n            return r;\r\n        }\r\n\r\n        static marshall(command, headers, body) {\r\n            var frame;\r\n            frame = new Frame(command, headers, body);\r\n            return frame.toString() + Byte.NULL;\r\n        }\r\n    }\r\n\r\n    return Frame;\r\n\r\n})();\r\n\r\nClient = (function() {\r\n    function now() {\r\n        if (Date.now) {\r\n            return Date.now();\r\n        } else {\r\n            return new Date().valueOf;\r\n        }\r\n    }\r\n\r\n    class Client {\r\n        constructor(ws) {\r\n            this.ws = ws;\r\n            this.ws.binaryType = \"arraybuffer\";\r\n            this.counter = 0;\r\n            this.connected = false;\r\n            this.heartbeat = {\r\n                outgoing: 10000,\r\n                incoming: 10000\r\n            };\r\n            this.maxWebSocketFrameSize = 16 * 1024;\r\n            this.subscriptions = {};\r\n            this.partialData = '';\r\n            this.debug = null\r\n        }\r\n\r\n        _transmit(command, headers, body) {\r\n            var out;\r\n            out = Frame.marshall(command, headers, body);\r\n            if (typeof this.debug === \"function\") {\r\n                this.debug(\">>> \" + out);\r\n            }\r\n            while (true) {\r\n                if (out.length > this.maxWebSocketFrameSize) {\r\n                    this.ws.send(out.substring(0, this.maxWebSocketFrameSize));\r\n                    out = out.substring(this.maxWebSocketFrameSize);\r\n                    if (typeof this.debug === \"function\") {\r\n                        this.debug(\"remaining = \" + out.length);\r\n                    }\r\n                } else {\r\n                    return this.ws.send(out);\r\n                }\r\n            }\r\n        }\r\n\r\n        _setupHeartbeat(headers) {\r\n            var serverIncoming, serverOutgoing, ttl, v, _ref, _ref1;\r\n            if ((_ref = headers.version) !== Stomp.VERSIONS.V1_1 && _ref !== Stomp.VERSIONS.V1_2) {\r\n                return;\r\n            }\r\n            _ref1 = (function () {\r\n                var _i, _len, _ref1, _results;\r\n                _ref1 = headers['heart-beat'].split(\",\");\r\n                _results = [];\r\n                for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n                    v = _ref1[_i];\r\n                    _results.push(parseInt(v));\r\n                }\r\n                return _results;\r\n            })(), serverOutgoing = _ref1[0], serverIncoming = _ref1[1];\r\n            if (!(this.heartbeat.outgoing === 0 || serverIncoming === 0)) {\r\n                ttl = Math.max(this.heartbeat.outgoing, serverIncoming);\r\n                if (typeof this.debug === \"function\") {\r\n                    this.debug(\"send PING every \" + ttl + \"ms\");\r\n                }\r\n                this.pinger = Stomp.setInterval(ttl, (function (_this) {\r\n                    return function () {\r\n                        _this.ws.send(Byte.LF);\r\n                        return typeof _this.debug === \"function\" ? _this.debug(\">>> PING\") : void 0;\r\n                    };\r\n                })(this));\r\n            }\r\n            if (!(this.heartbeat.incoming === 0 || serverOutgoing === 0)) {\r\n                ttl = Math.max(this.heartbeat.incoming, serverOutgoing);\r\n                if (typeof this.debug === \"function\") {\r\n                    this.debug(\"check PONG every \" + ttl + \"ms\");\r\n                }\r\n//        return this.ponger = Stomp.setInterval(ttl, (function(_this) {\r\n//          return function() {\r\n//            var delta;\r\n//            delta = now() - _this.serverActivity;\r\n//            if (delta > ttl * 2) {\r\n//              if (typeof _this.debug === \"function\") {\r\n//                _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\r\n//              }\r\n//              return _this.ws.close();\r\n//            }\r\n//          };\r\n//        })(this));\r\n            }\r\n        }\r\n\r\n        _parseConnect() {\r\n            var args, connectCallback, errorCallback, headers;\r\n            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\r\n            headers = {};\r\n            switch (args.length) {\r\n                case 2:\r\n                    headers = args[0], connectCallback = args[1];\r\n                    break;\r\n                case 3:\r\n                    if (args[1] instanceof Function) {\r\n                        headers = args[0], connectCallback = args[1], errorCallback = args[2];\r\n                    } else {\r\n                        headers.login = args[0], headers.passcode = args[1], connectCallback = args[2];\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3];\r\n                    break;\r\n                default:\r\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], headers.host = args[4];\r\n            }\r\n            return [headers, connectCallback, errorCallback];\r\n        }\r\n\r\n        connect(){\r\n            var args, errorCallback, headers, out;\r\n            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\r\n            out = this._parseConnect.apply(this, args);\r\n            headers = out[0], this.connectCallback = out[1], errorCallback = out[2];\r\n            if (typeof this.debug === \"function\") {\r\n                this.debug(\"Opening Web Socket...\");\r\n            }\r\n            this.ws.onmessage = (function (_this) {\r\n                return function (evt) {\r\n                    var arr, c, client, data, frame, messageID, onreceive, subscription, unmarshalledData, _i, _len, _ref, _results;\r\n                    data = typeof ArrayBuffer !== 'undefined' && evt.data instanceof ArrayBuffer ? (arr = new Uint8Array(evt.data), typeof _this.debug === \"function\" ? _this.debug(\"--- got data length: \" + arr.length) : void 0, ((function () {\r\n                        var _i, _len, _results;\r\n                        _results = [];\r\n                        for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n                            c = arr[_i];\r\n                            _results.push(String.fromCharCode(c));\r\n                        }\r\n                        return _results;\r\n                    })()).join('')) : evt.data;\r\n                    _this.serverActivity = now();\r\n                    if (data === Byte.LF) {\r\n                        if (typeof _this.debug === \"function\") {\r\n                            _this.debug(\"<<< PONG\");\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (typeof _this.debug === \"function\") {\r\n                        _this.debug(\"<<< \" + data);\r\n                    }\r\n                    unmarshalledData = Frame.unmarshall(_this.partialData + data);\r\n                    _this.partialData = unmarshalledData.partial;\r\n                    _ref = unmarshalledData.frames;\r\n                    _results = [];\r\n\r\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n                        frame = _ref[_i];\r\n                        switch (frame.command) {\r\n                            case \"CONNECTED\":\r\n                                if (typeof _this.debug === \"function\") {\r\n                                    _this.debug(\"connected to server \" + frame.headers.server);\r\n                                }\r\n                                _this.connected = true;\r\n                                _this._setupHeartbeat(frame.headers);\r\n                                _results.push(typeof _this.connectCallback === \"function\" ? _this.connectCallback(frame) : void 0);\r\n                                break;\r\n                            case \"MESSAGE\":\r\n                                subscription = frame.headers.subscription;\r\n                                onreceive = _this.subscriptions[subscription] || _this.onreceive;\r\n                                if (onreceive) {\r\n                                    client = _this;\r\n                                    messageID = frame.headers[\"message-id\"];\r\n                                    frame.ack = function (headers) {\r\n                                        if (headers == null) {\r\n                                            headers = {};\r\n                                        }\r\n                                        return client.ack(messageID, subscription, headers);\r\n                                    };\r\n                                    frame.nack = function (headers) {\r\n                                        if (headers == null) {\r\n                                            headers = {};\r\n                                        }\r\n                                        return client.nack(messageID, subscription, headers);\r\n                                    };\r\n                                    _results.push(onreceive(frame));\r\n                                } else {\r\n                                    _results.push(typeof _this.debug === \"function\" ? _this.debug(\"Unhandled received MESSAGE: \" + frame) : void 0);\r\n                                }\r\n                                break;\r\n                            case \"RECEIPT\":\r\n                                _results.push(typeof _this.onreceipt === \"function\" ? _this.onreceipt(frame) : void 0);\r\n                                break;\r\n                            case \"ERROR\":\r\n                                _results.push(typeof errorCallback === \"function\" ? errorCallback(frame) : void 0);\r\n                                break;\r\n                            default:\r\n                                _results.push(typeof _this.debug === \"function\" ? _this.debug(\"Unhandled frame: \" + frame) : void 0);\r\n                        }\r\n                    }\r\n                    return _results;\r\n                };\r\n            })(this);\r\n\r\n            this.ws.onclose = (function (_this) {\r\n                return function () {\r\n                    var msg;\r\n                    msg = \"Whoops! Lost connection to \" + _this.ws.url;\r\n                    if (typeof _this.debug === \"function\") {\r\n                        _this.debug(msg);\r\n                    }\r\n                    _this._cleanUp();\r\n                    return typeof errorCallback === \"function\" ? errorCallback(msg) : void 0;\r\n                };\r\n            })(this);\r\n            return this.ws.onopen = (function (_this) {\r\n                return function () {\r\n                    if (typeof _this.debug === \"function\") {\r\n                        _this.debug('Web Socket Opened...');\r\n                    }\r\n                    headers[\"accept-version\"] = Stomp.VERSIONS.supportedVersions();\r\n                    headers[\"heart-beat\"] = [_this.heartbeat.outgoing, _this.heartbeat.incoming].join(',');\r\n                    return _this._transmit(\"CONNECT\", headers);\r\n                };\r\n            })(this);\r\n        }\r\n\r\n        disconnect(disconnectCallback, headers) {\r\n            if (headers == null) {\r\n                headers = {};\r\n            }\r\n            this._transmit(\"DISCONNECT\", headers);\r\n            this.ws.onclose = null;\r\n            this.ws.close();\r\n            this._cleanUp();\r\n            return typeof disconnectCallback === \"function\" ? disconnectCallback() : void 0;\r\n        }\r\n\r\n        _cleanUp() {\r\n            this.connected = false;\r\n            if (this.pinger) {\r\n                Stomp.clearInterval(this.pinger);\r\n            }\r\n            if (this.ponger) {\r\n                return Stomp.clearInterval(this.ponger);\r\n            }\r\n        }\r\n\r\n        send(destination, headers, body) {\r\n            if (headers == null) {\r\n                headers = {};\r\n            }\r\n            if (body == null) {\r\n                body = '';\r\n            }\r\n            headers.destination = destination;\r\n            return this._transmit(\"SEND\", headers, body);\r\n        }\r\n        subscribe(destination, callback, headers) {\r\n            var client;\r\n            if (headers == null) {\r\n                headers = {};\r\n            }\r\n            if (!headers.id) {\r\n                headers.id = \"sub-\" + this.counter++;\r\n            }\r\n            headers.destination = destination;\r\n            this.subscriptions[headers.id] = callback;\r\n            this._transmit(\"SUBSCRIBE\", headers);\r\n            client = this;\r\n            return {\r\n                id: headers.id,\r\n                unsubscribe: function () {\r\n                    return client.unsubscribe(headers.id);\r\n                }\r\n            };\r\n        }\r\n\r\n        unsubscribe(id) {\r\n            delete this.subscriptions[id];\r\n            return this._transmit(\"UNSUBSCRIBE\", {\r\n                id: id\r\n            });\r\n        }\r\n\r\n        begin(transaction) {\r\n            var client, txid;\r\n            txid = transaction || \"tx-\" + this.counter++;\r\n            this._transmit(\"BEGIN\", {\r\n                transaction: txid\r\n            });\r\n            client = this;\r\n            return {\r\n                id: txid,\r\n                commit: function () {\r\n                    return client.commit(txid);\r\n                },\r\n                abort: function () {\r\n                    return client.abort(txid);\r\n                }\r\n            };\r\n        }\r\n\r\n        commit(transaction) {\r\n            return this._transmit(\"COMMIT\", {\r\n                transaction: transaction\r\n            });\r\n        }\r\n\r\n        abort(transaction) {\r\n            return this._transmit(\"ABORT\", {\r\n                transaction: transaction\r\n            });\r\n        }\r\n\r\n        ack(messageID, subscription, headers) {\r\n            if (headers == null) {\r\n                headers = {};\r\n            }\r\n            headers[\"message-id\"] = messageID;\r\n            headers.subscription = subscription;\r\n            return this._transmit(\"ACK\", headers);\r\n        }\r\n\r\n        nack(messageID, subscription, headers) {\r\n            if (headers == null) {\r\n                headers = {};\r\n            }\r\n            headers[\"message-id\"] = messageID;\r\n            headers.subscription = subscription;\r\n            return this._transmit(\"NACK\", headers);\r\n        }\r\n    }\r\n\r\n    return Client;\r\n\r\n})();\r\n\r\nStomp = {\r\n    VERSIONS: {\r\n        V1_0: '1.0',\r\n        V1_1: '1.1',\r\n        V1_2: '1.2',\r\n        supportedVersions: function() {\r\n            return '1.1,1.0';\r\n        }\r\n    },\r\n    client: function(url, protocols) {\r\n        var klass, ws;\r\n        if (protocols == null) {\r\n            protocols = ['v10.stomp', 'v11.stomp'];\r\n        }\r\n        klass = Stomp.WebSocketClass || WebSocket;\r\n        ws = new klass(url, protocols);\r\n        return new Client(ws);\r\n    },\r\n    over: function(ws) {\r\n        return new Client(ws);\r\n    },\r\n    Frame: Frame,\r\n    setInterval:function (interval, f) {\r\n        return window.setInterval(f, interval);\r\n    },\r\n    clearInterval:function (id) {\r\n        return window.clearInterval(id);\r\n    }\r\n};\r\n\r\nexport default Stomp\n\n\n// WEBPACK FOOTER //\n// ./src/stomp.js"],"sourceRoot":""}