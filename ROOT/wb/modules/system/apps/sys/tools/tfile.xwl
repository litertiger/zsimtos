{
 "hidden": false,
 "children": [{
  "configs": {
   "serverScript": "//获取指定的根目录\
var sysFolderBase = String(Var.getString(\"sys.ide.sysFolderBase\"));\
switch (sysFolderBase) {\
  case 'app':\
    sysFolderBase = FileUtil.getPath(Base.path);\
    break;\
  case 'server':\
    sysFolderBase = FileUtil.getPath(Base.path.getParentFile()\
      .getParent()) + '/';\
    break;\
  default:\
    sysFolderBase = '';\
}\
request.setAttribute('sysFolderBase', sysFolderBase);",
   "itemId": "module"
  },
  "expanded": true,
  "children": [
   {
    "configs": {
     "itemId": "menu",
     "menu": " [{\
   text: '新建文件',\
   glyph: 'f016',\
   handler: app.addFile\
 }, {\
   text: '新建文件夹',\
   glyph: 'f114',\
   handler: app.addFolder\
 }, {\
   text: '重命名',\
   glyph: 'f044',\
   handler: app.rename\
 }, {\
   text: '剪切',\
   glyph: 'f0c4',\
   handler: app.cut\
 }, {\
   text: '复制',\
   glyph: 'f0c5',\
   handler: app.copy\
 }, {\
   text: '粘贴',\
   glyph: 'f0ea',\
   handler: app.paste\
 }, {\
   text: '删除',\
   glyph: 'f00d',\
   handler: app.remove\
 }, {\
   text: '导出',\
   glyph: 'f0aa',\
   handler: app.exportFiles\
 }, {\
   text: '导入',\
   glyph: 'f0ab',\
   handler: app.importFiles\
 }, {\
   text: '属性',\
   glyph: 'f05a',\
   handler: app.viewProperties\
 }, {\
   text: '刷新',\
   glyph: 'f021',\
   handler: app.refresh\
 }]"
    },
    "expanded": false,
    "children": [],
    "type": "tpanel"
   },
   {
    "configs": {
     "layout": "fit",
     "itemId": "viewport1",
     "appImage": "wb/images/icon/explorer.png"
    },
    "expanded": true,
    "children": [{
     "configs": {
      "layout": "fit",
      "itemId": "container1"
     },
     "expanded": true,
     "children": [{
      "configs": {
       "itemId": "fileList",
       "title": "Root"
      },
      "expanded": true,
      "children": [
       {
        "configs": {
         "itemId": "toolbar",
         "ui": "light",
         "docked": "top"
        },
        "expanded": true,
        "children": [
         {
          "configs": {
           "itemId": "checkBtn",
           "glyph": "f096",
           "align": "right"
          },
          "expanded": false,
          "children": [],
          "type": "tbutton",
          "events": {"tap": "app.checkStatus = !app.checkStatus;\
app.checkBtn.setGlyph(app.checkStatus ? 0xf046 : 0xf096);\
app.fileList.setFolderSelect(app.checkStatus);\
app.fileList._activeItem.deselectAll();\
app.fileList._activeItem.setMode(app.checkStatus ? 'MULTI' : 'SINGLE');"}
         },
         {
          "configs": {
           "itemId": "menuBtn",
           "glyph": "f0c9",
           "align": "right"
          },
          "expanded": false,
          "children": [],
          "type": "tbutton",
          "events": {"tap": "app.menu.showBy(button);"}
         }
        ],
        "type": "ttitlebar"
       },
       {
        "configs": {
         "itemId": "store",
         "normalName": "fileStore",
         "fields": "['text', 'icon', 'size', 'leaf', 'date', 'type']",
         "url": "m?xwl=system/apps/sys/tools/tfile/get-tree&mode=1"
        },
        "expanded": false,
        "children": [],
        "type": "ttreestore",
        "events": {"beforeload": "var path, node = operation._node;\
if (node.isRoot())\
  path = app.basePath;\
else\
  path = app.getPath(node);\
Ext.applyIf(operation._params, {\
  path: path\
});"}
       },
       {
        "configs": {
         "itemId": "listConfig",
         "itemTpl": "<span><img src='{icon}' class='wb_icon2'>{text}<\/span>"
        },
        "expanded": false,
        "children": [],
        "type": "tlist"
       }
      ],
      "type": "tnlist",
      "events": {"listchange": "listitem.setMode(app.checkStatus ? 'MULTI' : 'SINGLE');"}
     }],
     "type": "tcontainer"
    }],
    "type": "tviewport"
   }
  ],
  "type": "module",
  "events": {"initialize": "Wb.apply(app, {\
  /** 根路径 */\
  basePath: '{#sysFolderBase#}',\
  /**\
   * 获取文件列表中文件节点的绝对路径。\
   * @param {NodeInterface} node 节点对象。\
   * @return {String} 绝对路径。\
   */\
  getPath: function(node) {\
    if (!node || node.isRoot()) return '';\
    var path = Wb.getSection(node.getPath('text'), '/', 2);\
    path = app.basePath ? (app.basePath + '/' + path) : path;\
    return path.replace('//', '/');\
  },\
  getCurrentPath: function() {\
    return app.getPath(app.fileList._lastNode);\
  },\
  getFileNames: function() {\
    var rows, fileNames, path = app.getCurrentPath();\
    if (!Ext.String.endsWith(path, '/'))\
      path += '/';\
    rows = app.fileList._activeItem.getSelection();\
    fileNames = [];\
    Wb.each(rows, function(row) {\
      fileNames.push(path + row.data.text);\
    });\
    return fileNames;\
  },\
  goto: function() {\
    var node = this.initialConfig.node;\
    app.fileList.goToNode(node);\
  },\
  addFile: function() {\
    app.doAddFile(false);\
  },\
  addFolder: function() {\
    app.doAddFile(true);\
  },\
  doCopy: function(isCut) {\
    app.isCut = isCut;\
    if (isCut) {\
      app.cutFromStore = app.fileList._activeItem.store;\
      app.cutItems = app.fileList._activeItem.getSelection();\
    }\
    app.clipboard = app.getFileNames();\
  },\
  copy: function() {\
    app.doCopy(false);\
  },\
  cut: function() {\
    app.doCopy(true);\
  },\
  paste: function() {\
    if (!app.clipboard || !app.clipboard.length) {\
      Wb.warn('没有可以粘贴的文件/目录。');\
      return;\
    }\
    Wb.request({\
      url: 'm?xwl=system/sys/widget/file/paste',\
      timeout: -1,\
      params: {\
        isCut: app.isCut,\
        src: app.clipboard,\
        dst: app.getCurrentPath()\
      },\
      success: function(resp) {\
        if (app.isCut) {\
          app.clipboard = null;\
          app.cutFromStore.remove(app.cutItems);\
        }\
        app.refresh();\
      }\
    });\
  },\
  remove: function() {\
    var list = app.fileList._activeItem,\
      items = list.getSelection();\
    Wb.confirmDo(items, function() {\
      Wb.request({\
        url: 'm?xwl=system/sys/widget/file/delete',\
        params: {\
          fileGrid: Wb.getData(items),\
          path: app.getCurrentPath()\
        },\
        success: function(resp) {\
          Wb.remove(list);\
        }\
      });\
    }, 'text');\
  },\
  refresh: function() {\
    app.fileStore.load({\
      node: app.fileList._lastNode\
    });\
  },\
  importFiles: function() {\
    Wb.prompt({\
      title: '导入 - ' + app.fileList._lastNode.data.text,\
      items: [{\
        label: '文件',\
        xtype: 'filefield',\
        required: true,\
        itemId: 'file'\
      }, {\
        label: '解压',\
        xtype: 'togglefield',\
        required: true,\
        itemId: 'unzip'\
      }],\
      handler: function(values, panel) {\
        var name = Wb.getValue(panel, null, true).file;\
        if (values.unzip && !Ext.String.endsWith(name.toLowerCase(), '.zip')) {\
          Wb.warn('请选择一个 zip 格式的文件。');\
          return false;\
        }\
        Wb.upload({\
          form: panel,\
          url: 'm?xwl=dev/ide/upload',\
          params: {\
            path: app.getCurrentPath()\
          },\
          success: function() {\
            panel.destroy();\
            app.refresh();\
          }\
        });\
      }\
    });\
  },\
  exportFiles: function() {\
    var files = app.getFileNames(null, true);\
    if (!files.length) {\
      Wb.warn('请选择至少一个需要导出的文件或目录。');\
      return;\
    }\
    Wb.download('m?xwl=dev/ide/download', {\
      files: files\
    });\
  },\
  rename: function() {\
    var path = app.getCurrentPath(),\
      selItem = app.fileList._activeItem.getSelection()[0];\
    if (!selItem) {\
      Wb.warn('请选择一个文件/文件夹。');\
      return;\
    }\
    oldName = selItem.data.text;\
    Wb.prompt({\
      title: '重命名 - ' + oldName,\
      items: [{\
        label: '新名称',\
        required: true,\
        itemId: 'name',\
        value: oldName\
      }],\
      handler: function(values, panel) {\
        Wb.request({\
          url: 'm?xwl=system/sys/widget/file/rename',\
          params: {\
            path: app.getCurrentPath(),\
            oldName: oldName,\
            newName: values.name\
          },\
          success: function(resp) {\
            var obj = Wb.decode(resp.responseText);\
            panel.destroy();\
            Wb.update(selItem, {\
              text: values.name,\
              icon: 'm?xwl=dev/ide/get-file-icon&file=' + obj.icon\
            });\
          }\
        });\
      }\
    });\
  },\
  doAddFile: function(isDir) {\
    var path = app.getCurrentPath();\
    if (!path) {\
      Wb.warn('请选择一个文件夹。');\
      return;\
    }\
    Wb.prompt({\
      title: isDir ? '新建文件夹' : '新建文件',\
      items: [{\
        label: isDir ? '文件夹名称' : '文件名称',\
        required: true,\
        itemId: 'name'\
      }],\
      handler: function(values, panel) {\
        Wb.request({\
          url: 'm?xwl=system/sys/widget/file/add-file',\
          params: {\
            path: app.getCurrentPath(),\
            name: values.name,\
            isDir: isDir\
          },\
          success: function(resp) {\
            panel.destroy();\
            app.refresh();\
          }\
        });\
      }\
    });\
  },\
  viewProperties: function() {\
    var file, sels = app.fileList._activeItem.getSelection();\
    if (sels.length == 1) {\
      file = sels[0];\
      Wb.prompt({\
        title: '属性',\
        items: [{\
          label: '文件名称',\
          readOnly: true,\
          value: file.data.text\
        }, {\
          label: '路径',\
          readOnly: true,\
          value: app.getCurrentPath()\
        }, {\
          label: '类型',\
          readOnly: true,\
          value: file.data.type\
        }, {\
          label: '大小',\
          readOnly: true,\
          value: file.data.leaf ? (Wb.getFileSize(file.data.size) + ' (' + Wb.format(file.data.size, '#,###') + ' B)') : ''\
        }, {\
          label: '修改时间',\
          readOnly: true,\
          value: Wb.dateToText(file.data.date)\
        }]\
      });\
    } else\
      Wb.warn('请选择一个文件/文件夹。');\
  }\
});"}
 }],
 "roles": {},
 "title": "文件管理器",
 "iconCls": "explorer_icon",
 "inframe": true,
 "pageLink": ""
}