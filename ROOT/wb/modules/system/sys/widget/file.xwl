{
 "hidden": false,
 "children": [{
  "configs": {
   "serverScript": "//获取指定的根目录\
var sysFolderBase = String(Var.getString(\"sys.ide.sysFolderBase\"));\
switch (sysFolderBase) {\
  case 'app':\
    sysFolderBase = FileUtil.getPath(Base.path);\
    break;\
  case 'server':\
    sysFolderBase = FileUtil.getPath(Base.path.getParentFile().getParent());\
    break;\
  default:\
    request.setAttribute('appPath', FileUtil.getPath(Base.path));\
    sysFolderBase = '';\
}\
request.setAttribute('sysFolderBase', sysFolderBase);",
   "itemId": "module"
  },
  "expanded": true,
  "children": [{
   "configs": {
    "layout": "fit",
    "border": "false",
    "itemId": "viewport1"
   },
   "expanded": true,
   "children": [{
    "configs": {
     "layout": "border",
     "border": "false",
     "itemId": "panel1"
    },
    "expanded": true,
    "children": [
     {
      "configs": {"itemId": "dockedItems"},
      "expanded": true,
      "children": [
       {
        "configs": {
         "border": "false",
         "itemId": "toolbar1",
         "enableOverflow": "true"
        },
        "expanded": true,
        "children": [
         {
          "configs": {
           "autoSelect": "false",
           "itemId": "address",
           "pickList": "[]",
           "flex": "1",
           "anyMatch": "true"
          },
          "expanded": false,
          "children": [],
          "type": "combo",
          "events": {
           "specialkey": "if (e.getKey() == e.ENTER) {\
  app.goBtn.fireEvent('click');\
}",
           "select": "app.goBtn.fireEvent('click');"
          }
         },
         {
          "configs": {
           "itemId": "goBtn",
           "overflowText": "转到",
           "tooltip": "转到",
           "iconCls": "go_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.selectPath(app.address.getValue(), function(succ) {\
  if (succ)\
    Wb.save(app.address);\
});"}
         }
        ],
        "type": "toolbar"
       },
       {
        "configs": {
         "border": "false",
         "itemId": "toolbar2",
         "enableOverflow": "true"
        },
        "expanded": true,
        "children": [
         {
          "configs": {
           "itemId": "newFileBtn",
           "tooltip": "在当前文件夹创建一个空的文件",
           "text": "新建文件",
           "iconCls": "file_add_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.createFile(false);"}
         },
         {
          "configs": {
           "itemId": "newFolderBtn",
           "tooltip": "在当前文件夹创建一个空的文件夹",
           "text": "新建文件夹",
           "iconCls": "folder_add_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.createFile(true);"}
         },
         {
          "configs": {
           "itemId": "renameBtn",
           "tooltip": "对选择的文件或文件夹重命名",
           "text": "重命名",
           "iconCls": "rename_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.rename();"}
         },
         {
          "configs": {
           "itemId": "editFileBtn",
           "tooltip": "在线打开并编辑选择的文件",
           "text": "编辑",
           "iconCls": "file_edit_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.openFile();"}
         },
         {
          "configs": {
           "itemId": "item0",
           "text": "-"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "upBtn",
           "tooltip": "返回上一级目录",
           "text": "向上",
           "iconCls": "upward_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "var node = app.fileTree.getSelection()[0];\
if (node && node.getDepth() > 1)\
  app.fileTree.setSelection(node.parentNode);"}
         },
         {
          "configs": {
           "itemId": "backBtn",
           "tooltip": "返回到上次目录",
           "text": "后退",
           "iconCls": "left_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "forwardBtn",
           "tooltip": "返回到后退前目录",
           "text": "前进",
           "iconCls": "right_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "item1",
           "text": "-"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "cutBtn",
           "tooltip": "把选择的文件或文件夹剪切到剪贴板 (Ctrl+X)",
           "text": "剪切",
           "iconCls": "cut_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.copyFiles(true);"}
         },
         {
          "configs": {
           "itemId": "copyBtn",
           "tooltip": "把选择的文件或文件夹复制到剪贴板 (Ctrl+C)",
           "text": "复制",
           "iconCls": "copy_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.copyFiles(false);"}
         },
         {
          "configs": {
           "itemId": "pasteBtn",
           "handler": "app.pasteFiles",
           "tooltip": "在当前文件夹粘贴剪贴板中的文件或文件夹 (Ctrl+V)",
           "text": "粘贴",
           "iconCls": "paste_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "deleteBtn",
           "tooltip": "删除选择的文件或文件夹 (Delete)",
           "text": "删除",
           "iconCls": "delete_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "app.deleteFiles();"}
         },
         {
          "configs": {
           "itemId": "item2",
           "text": "-"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "exportBtn",
           "xtype": "splitbutton",
           "tooltip": "导出选择的文件或目录",
           "text": "导出",
           "iconCls": "export_icon"
          },
          "expanded": true,
          "children": [{
           "configs": {
            "itemId": "zipExportBtn",
            "tooltip": "对选择的文件或目录压缩后导出",
            "text": "压缩并导出",
            "iconCls": "file_zip_icon"
           },
           "expanded": false,
           "children": [],
           "type": "item",
           "events": {"click": "app.exportFile(true);"}
          }],
          "type": "item",
          "events": {"click": "app.exportFile(false);"}
         },
         {
          "configs": {
           "itemId": "importBtn",
           "xtype": "splitbutton",
           "tooltip": "导入文件到当前目录",
           "text": "导入",
           "iconCls": "import_icon"
          },
          "expanded": true,
          "children": [{
           "configs": {
            "itemId": "unzipExportBtn",
            "tooltip": "导入文件并解压到当前目录",
            "text": "导入并解压",
            "iconCls": "file_zip_icon"
           },
           "expanded": false,
           "children": [],
           "type": "item",
           "events": {"click": "app.importFile(true);"}
          }],
          "type": "item",
          "events": {"click": "app.importFile(false);"}
         },
         {
          "configs": {
           "itemId": "item3",
           "text": "-"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "refreshBtn",
           "tooltip": "刷新所有的文件和文件夹",
           "text": "刷新",
           "iconCls": "refresh_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "Wb.reload(app.fileTree);"}
         }
        ],
        "type": "toolbar"
       },
       {
        "configs": {
         "itemId": "statusBar",
         "dock": "bottom"
        },
        "expanded": false,
        "children": [
         {
          "configs": {
           "itemId": "fileSizeLabel",
           "xtype": "tbtext",
           "text": "&nbsp;"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "item2",
           "text": "->"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "fileTotalLabel",
           "xtype": "tbtext"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         }
        ],
        "type": "toolbar"
       }
      ],
      "type": "array"
     },
     {
      "configs": {
       "itemId": "fileTree",
       "split": "true",
       "width": "250",
       "header": "false",
       "region": "west",
       "collapsible": "true",
       "rootVisible": "false"
      },
      "expanded": true,
      "children": [{
       "configs": {
        "itemId": "store",
        "normalName": "treeStore",
        "root": "{\
  expanded: false\
}",
        "autoLoad": "false",
        "url": "m?xwl=system/sys/widget/file/get-files&mode=2"
       },
       "expanded": false,
       "children": [],
       "type": "treestore",
       "events": {
        "success": "if (app.baseType == 'app') {\
  if (!app.fileTree.selFirstDone) {\
    var wbNode = app.fileTree.getRootNode().findChild('text', 'wb');\
    if (wbNode)\
      app.fileTree.setSelection(wbNode);\
    app.fileTree.selFirstDone = true;\
  }\
} else\
  Wb.selFirst(app.fileTree);",
        "beforeload": "var path, node = operation.node;\
if (node.isRoot())\
  path = app.basePath;\
else\
  path = app.getPath(node);\
operation.params.path = path;"
       }
      }],
      "type": "tree",
      "events": {
       "selectionchange": "var node = selected[0],\
  path = app.getPath(node);\
if (node) {\
  app.address.setValue(app.basePath ? path.substring(app.basePath.length + 1) : path);\
  app.gridStore.load({\
    params: {\
      path: path\
    }\
  });\
} else app.gridStore.removeAll();",
       "afterrender": "tree.getRootNode().expand();"
      }
     },
     {
      "configs": {
       "itemId": "fileGrid",
       "pagingBar": "false",
       "region": "center",
       "multiSelect": "true"
      },
      "expanded": true,
      "children": [
       {
        "configs": {
         "itemId": "store",
         "remoteSort": "true",
         "normalName": "gridStore",
         "pageSize": "-1",
         "sorters": "'text'",
         "fields": "['text', 'leaf', 'icon', 'type', {\
  name: 'size',\
  useNull: true\
}, {\
  name: 'date',\
  dateFormat: Wb.dateFormat,\
  type: 'date'\
}]",
         "url": "m?xwl=system/sys/widget/file/get-files&mode=3"
        },
        "expanded": false,
        "children": [],
        "type": "store",
        "events": {
         "datachanged": "var folderCount = 0,\
  fileItems = [],\
  totalCount = app.gridStore.getCount();\
app.gridStore.each(function(rec) {\
  if (rec.data.leaf) {\
    fileItems.push({\
      field1: rec.data.text\
    });\
  } else {\
    folderCount++;\
  }\
});\
app.fileTotalLabel.setText('合计：' + Wb.format(totalCount, '#,##0') + '，文件夹：' + Wb.format(folderCount, '#,##0') +\
  '，文件：' + Wb.format(totalCount - folderCount, '#,##0'));\
app.fileNameText.store.loadData(fileItems);",
         "success": "if (!app.fileNameText.firstFocused && app.fileNameText.isVisible()) {\
  app.fileNameText.firstFocused = true;\
  app.fileNameText.focus(false, true);\
}"
        }
       },
       {
        "configs": {
         "itemId": "bbar",
         "hidden": "true",
         "normalName": "fileNameBar"
        },
        "expanded": true,
        "children": [
         {
          "configs": {
           "itemId": "fileNameLbl",
           "xtype": "tbtext",
           "text": "文件名称："
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "fileNameText",
           "flex": "1",
           "store": "[]",
           "anyMatch": "true"
          },
          "expanded": false,
          "children": [],
          "type": "combo"
         }
        ],
        "type": "toolbar"
       },
       {
        "configs": {"itemId": "columns"},
        "expanded": true,
        "children": [
         {
          "configs": {
           "itemId": "numCol",
           "xtype": "rownumberer"
          },
          "expanded": false,
          "children": [],
          "type": "column"
         },
         {
          "configs": {
           "itemId": "nameCol",
           "renderer": "var icon;\
if (record.get('leaf'))\
  icon = Wb.getUrlIcon('m?xwl=system/sys/widget/file/get-file-icon&file=' + record.get('icon'));\
else icon = Wb.getIcon('x-tree-icon-parent');\
return icon + value;",
           "dataIndex": "text",
           "width": "280",
           "text": "名称"
          },
          "expanded": false,
          "children": [],
          "type": "column"
         },
         {
          "configs": {
           "itemId": "sizeCol",
           "renderer": "return Wb.getFileSize(value);",
           "dataIndex": "size",
           "width": "90",
           "text": "大小",
           "align": "right"
          },
          "expanded": false,
          "children": [],
          "type": "column"
         },
         {
          "configs": {
           "itemId": "typeCol",
           "dataIndex": "type",
           "width": "150",
           "text": "类型"
          },
          "expanded": false,
          "children": [],
          "type": "column"
         },
         {
          "configs": {
           "itemId": "dateCol",
           "dataIndex": "date",
           "width": "130",
           "text": "修改日期"
          },
          "expanded": false,
          "children": [],
          "type": "column"
         }
        ],
        "type": "array"
       }
      ],
      "type": "grid",
      "events": {
       "tagEvents": "{\
  itemkeydown: Wb.mimicClick\
}",
       "selectionchange": "if (selected.length > 1) {\
  var items = Wb.format('选择 {0} 项', Wb.format(selected.length, '#,##0'));\
  app.fileSizeLabel.setText(items);\
  app.fileNameText.setValue(items);\
} else if (selected.length == 1) {\
  var rec = selected[0];\
  if (rec.data.leaf)\
    app.fileNameText.setValue(rec.data.text);\
  app.fileSizeLabel.setText(rec && rec.data.leaf ? (Wb.getFileSize(rec.data.size) + ' (' + rec.data.size + ' B)') : '&nbsp;');\
}",
       "itemdblclick": "var node = app.fileTree.getSelection()[0];\
if (node) {\
  if (record.data.leaf) {\
    app.dblClickFileHandler();\
  } else {\
    node.expand(false, function() {\
      var child = node.findChild('text', record.get('text'));\
      if (child)\
        app.fileTree.setSelection(child);\
      else {\
        Wb.warn('未找到目录\u201c' + record.get('text') + '\u201d，请刷新后再试一次。');\
      }\
    });\
  }\
}"
      }
     }
    ],
    "type": "panel"
   }],
   "type": "viewport",
   "events": {"afterrender": "var appPath = \"{#appPath#}\";\
if (appPath)\
  app.address.store.add({\
    field1: appPath\
  });\
Wb.setNavigate(app.fileTree, app.backBtn, app.forwardBtn);\
app.navKey = new Ext.KeyNav({\
  component: viewport,\
  ignoreInputFields: true,\
  beforeCall: function(e) {\
    if (Wb.isModal()) {\
      e.stopEvent();\
      return false;\
    }\
  },\
  C: {\
    ctrl: true,\
    fn: function() {\
      app.copyFiles(false);\
    }\
  },\
  X: {\
    ctrl: true,\
    fn: function(e) {\
      app.copyFiles(true);\
    }\
  },\
  V: {\
    ctrl: true,\
    fn: app.pasteFiles\
  },\
  del: app.deleteFiles\
});"}
  }],
  "type": "module",
  "events": {"initialize": "Wb.apply(app, {\
  /** 根路径类型 */\
  baseType: '{#Var.sys.ide.sysFolderBase#}',\
  /** 根路径 */\
  basePath: '{#sysFolderBase#}',\
  /** 文件多选标识 */\
  multiSelect: true,\
  /**\
   * 获取文件列表中文件节点的绝对路径。\
   * @param {NodeInterface} node 节点对象，如果未指定节点则使用选择的节点。\
   * @return {String} 绝对路径。\
   */\
  getPath: function(node) {\
    if (!node || node.isRoot()) return '';\
    var path = Wb.getSection(node.getPath('text'), '/', 2);\
    path = app.basePath ? (app.basePath + '/' + path) : path;\
  \
    return path.replace('//', '/');\
  },\
  openFile: function() {\
    var fileNames = app.getFileNames();\
    if (Wb.isEmpty(fileNames)) {\
      Wb.warn('请选择至少一个文件。');\
      return;\
    }\
    Wb.each(fileNames, function(fileName) {\
      var encodeFileName = encodeURIComponent(fileName).replace(/\\(/g, '%28').replace(/\\)/g, '%29');\
      Wb.open({\
        url: 'text-editor?f=' + encodeFileName, //f仅用于标识url，使二次打开时自动定位到原文件tab\
        params: {\
          file: fileName\
        },\
        newTab: false,\
        title: Ext.String.ellipsis(Wb.getFilename(fileName), 20),\
        icon: 'm?xwl=system/sys/widget/file/get-file-icon&file=' + encodeFileName,\
        tooltip: fileName\
      });\
    });\
  },\
  selectPath: function(path, callback) {\
    path = '/Root/' + path.replace(/\\\\/g, '/');\
    if (Ext.String.endsWith(path, '/'))\
      path = path.slice(0, -1);\
    if (app.baseType == 'root') {\
      path = path.split('/');\
      path[2] = path[2] + '/'; //系统根目录补上/，适用所有操作系统\
      app.fileTree.selectPath(path.join('\\
'), 'text', '\\
', callback);\
    } else app.fileTree.selectPath(path, 'text', '/', callback);\
  },\
  createFile: function(isDir) {\
    Wb.prompt({\
      title: isDir ? '新建文件夹' : '新建文件',\
      iconCls: isDir ? 'folder_add_icon' : 'file_add_icon',\
      items: {\
        itemId: 'name',\
        allowBlank: false,\
        fieldLabel: isDir ? '文件夹名称' : '文件名称'\
      },\
      handler: function(values, win) {\
        var node = app.fileTree.getSelection()[0];\
        if (node.isLeaf())\
          node = node.parentNode;\
        Wb.request({\
          url: 'm?xwl=system/sys/widget/file/add-file',\
          params: {\
            isDir: isDir,\
            path: app.getPath(node),\
            name: values.name\
          },\
          success: function(resp) {\
            var loaded = node.data.loaded,\
              object = Wb.decode(resp.responseText);\
            if (isDir && node.isLoaded()) {\
              node.appendChild({\
                text: values.name,\
                children: []\
              }).commit();\
            }\
            Wb.add(app.fileGrid, Wb.apply(object, {\
              text: values.name,\
              leaf: !isDir\
            }));\
            win.close();\
          }\
        });\
      }\
    });\
  },\
  rename: function() {\
    var win, nameField, oldName, sels = app.fileGrid.getSelection(),\
      node = app.fileTree.getSelection()[0];\
    if (sels.length != 1) {\
      Wb.warn('请选择一个文件或目录。');\
      return;\
    }\
    sels = sels[0];\
    oldName = sels.data.text;\
    win = Wb.prompt({\
      title: '重命名 - ' + oldName,\
      focusControl: null,\
      iconCls: 'rename_icon',\
      items: {\
        itemId: 'name',\
        allowBlank: false,\
        fieldLabel: '新名称',\
        value: oldName\
      },\
      handler: function(values, win) {\
        if (oldName == values.name) {\
          win.close();\
          return;\
        }\
        Wb.request({\
          url: 'm?xwl=system/sys/widget/file/rename',\
          params: {\
            path: app.getPath(node),\
            oldName: oldName,\
            newName: values.name\
          },\
          success: function(resp) {\
            var obj = Wb.decode(resp.responseText);\
            Wb.update(sels, {\
              text: values.name,\
              icon: obj.icon\
            });\
            if (!sels.data.leaf && node.isLoaded()) {\
              //更新tree上的名称\
              var sub = node.findChild('text', oldName);\
              sub.set('text', values.name);\
              sub.commit();\
            }\
            win.close();\
          }\
        });\
      }\
    });\
    nameField = win.down('#name');\
    nameField.focus(false, true, function() {\
      var pos = oldName.lastIndexOf('.');\
      if (pos == -1) pos = oldName.length;\
      nameField.selectText(0, pos);\
    });\
\
  },\
  deleteFiles: function() {\
    var node = app.fileTree.getSelection()[0],\
      files = app.fileGrid.getSelection();\
    Wb.confirmDo(files, function() {\
      Wb.request({\
        url: 'm?xwl=system/sys/widget/file/delete',\
        timeout: -1,\
        out: app.fileGrid,\
        params: {\
          path: app.getPath(node)\
        },\
        success: function(resp) {\
          Wb.remove(app.fileGrid);\
          if (node.isLoaded()) {\
            Wb.each(files, function(file) {\
              var child = node.findChild('text', file.data.text);\
              if (child) child.remove();\
            });\
          }\
        }\
      });\
    });\
  },\
  copyFiles: function(isCut) {\
    var fileNames = app.getFileNames(null, true),\
      node = app.fileTree.getSelection()[0];\
    if (!fileNames.length) {\
      Wb.warn('请选择至少一个文件/目录。');\
      return;\
    }\
    app.clipboard = fileNames;\
    if (isCut && node.isLoaded()) {\
      app.cutNodes = [];\
      Wb.each(fileNames, function(fileName) {\
        app.cutNodes.push(node.findChild('text', Wb.getFilename(fileName)));\
      });\
    }\
    app.isCut = isCut;\
  },\
  pasteFiles: function() {\
    if (!app.clipboard || !app.clipboard.length) {\
      Wb.warn('没有可以粘贴的文件/目录。');\
      return;\
    }\
    var dstNode = app.fileTree.getSelection()[0];\
    Wb.request({\
      url: 'm?xwl=system/sys/widget/file/paste',\
      timeout: -1,\
      params: {\
        isCut: app.isCut,\
        src: app.clipboard,\
        dst: app.getPath(dstNode)\
      },\
      success: function(resp) {\
        Ext.suspendLayouts();\
        if (app.isCut) {\
          app.clipboard = null;\
          Wb.each(app.cutNodes, function(node) {\
            if (node)\
              node.remove();\
          });\
        }\
        var index, oldItems = [],\
          items = Wb.decode(resp.responseText);\
        if (dstNode.isLoaded()) {\
          Wb.each(items, function(item) {\
            if (!item.leaf && !dstNode.findChild('text', item.text)) {\
              dstNode.appendChild({\
                text: item.text,\
                children: []\
              }).commit();\
            }\
          });\
        }\
        Wb.each(items, function(item) {\
          index = app.gridStore.findExact('text', item.text);\
          if (index != -1)\
            oldItems.push(app.gridStore.getAt(index));\
        });\
        app.gridStore.remove(oldItems);\
        Wb.add(app.fileGrid, items);\
        Ext.resumeLayouts(true);\
      }\
    });\
  },\
  getFileNames: function(extName, includeFolder) {\
    function addExtName(filename) {\
      if (!extName)\
        return filename;\
      if (Ext.String.endsWith(filename.toLowerCase(), lowerExtName))\
        return filename;\
      else return filename + extName;\
    }\
    var rows, lowerExtName = extName ? extName.toLowerCase() : null,\
      fileNames, path = app.getPath(app.fileTree.getSelection()[0]);\
    if (!Ext.String.endsWith(path, '/'))\
      path += '/';\
    if (!includeFolder && !app.multiSelect)\
      return [path + addExtName(app.fileNameText.getValue())];\
    rows = app.fileGrid.getSelection();\
    fileNames = [];\
    Wb.each(rows, function(row) {\
      if (includeFolder || row.data.leaf)\
        fileNames.push(path + row.data.text);\
    });\
    return fileNames;\
  },\
  exportFile: function(zip) {\
    //微信等如果禁止下载，可使用普通手机浏览器或webview来使用下载功能\
    var files = app.getFileNames(null, true);\
    if (!files.length) {\
      Wb.warn('请选择至少一个需要导出的文件或目录。');\
      return;\
    }\
\
    Wb.download('m?xwl=dev/ide/download', {\
      files: files,\
      zip: zip\
    });\
  },\
  importFile: function(unzip) {\
    var node = app.fileTree.getSelection()[0],\
      path = app.getPath(node);\
    Wb.run({\
      url: 'upload',\
      success: function(scope) {\
        Wb.highlight(node);\
        scope.upload({\
          url: 'm?xwl=dev/ide/upload',\
          iconCls: 'import_icon',\
          title: (unzip ? '导入并解压 - ' : '导入 - ') + node.data.text,\
          params: {\
            path: path,\
            unzip: unzip\
          },\
          beforeUpload: unzip ? function() {\
            if (!Ext.String.endsWith(scope.file.getValue().toLowerCase(), '.zip')) {\
              Wb.warn('请选择一个 zip 格式的文件。');\
              return false;\
            }\
          } : null,\
          success: function() {\
            Wb.reload(app.fileTree);\
          }\
        });\
      }\
    });\
  }\
});\
app.dblClickFileHandler = app.openFile;"}
 }],
 "roles": {"default": 1},
 "title": "文件管理器",
 "iconCls": "explorer_icon",
 "inframe": false,
 "pageLink": ""
}