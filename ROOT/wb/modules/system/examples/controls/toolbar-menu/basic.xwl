{
 "hidden": false,
 "children": [{
  "configs": {
   "itemId": "module",
   "jsLinks": "[]"
  },
  "expanded": true,
  "children": [{
   "configs": {
    "layout": "fit",
    "itemId": "viewport1"
   },
   "expanded": true,
   "children": [{
    "configs": {"itemId": "panel1"},
    "expanded": true,
    "children": [
     {
      "configs": {"itemId": "tbar"},
      "expanded": true,
      "children": [
       {
        "configs": {
         "itemId": "menuItem",
         "text": "菜单",
         "iconCls": "menu_icon"
        },
        "expanded": false,
        "children": [
         {
          "configs": {"itemId": "htmleditor1"},
          "expanded": false,
          "children": [],
          "type": "htmleditor"
         },
         {
          "configs": {
           "itemId": "iconItem",
           "text": "图标菜单",
           "iconCls": "printer_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "Wb.info('您点击了菜单。');"}
         },
         {
          "configs": {
           "itemId": "glyphItem",
           "glyph": "f015",
           "text": "Glyph菜单"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"click": "Wb.info('您点击了菜单。');"}
         },
         {
          "configs": {
           "itemId": "subItem",
           "text": "更多子菜单"
          },
          "expanded": false,
          "children": [{
           "configs": {
            "itemId": "item1",
            "text": "子菜单1"
           },
           "expanded": true,
           "children": [{
            "configs": {
             "itemId": "item1",
             "text": "子菜单2"
            },
            "expanded": false,
            "children": [],
            "type": "item"
           }],
           "type": "item"
          }],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "separatorItem",
           "text": "-"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "comboItem",
           "pickList": "['WebBuilder', 'Java', 'JS', 'SQL', 'HTML5', 'Web']",
           "value": "下拉框"
          },
          "expanded": false,
          "children": [],
          "type": "combo"
         },
         {
          "configs": {
           "itemId": "checkedItem",
           "checked": "true",
           "text": "复选框"
          },
          "expanded": true,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "separatorItem1",
           "text": "-"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "radioItems",
           "text": "单选按钮组"
          },
          "expanded": true,
          "children": [
           {
            "configs": {
             "itemId": "item1",
             "checked": "true",
             "text": "Aero Glass",
             "group": "theme"
            },
            "expanded": false,
            "children": [],
            "type": "item"
           },
           {
            "configs": {
             "itemId": "item2",
             "checked": "false",
             "text": "Vista Black",
             "group": "theme"
            },
            "expanded": false,
            "children": [],
            "type": "item"
           },
           {
            "configs": {
             "itemId": "item3",
             "checked": "false",
             "text": "Gray Theme",
             "group": "theme"
            },
            "expanded": false,
            "children": [],
            "type": "item"
           }
          ],
          "type": "item",
          "events": {"menuclick": "if (item.itemId)\
  Wb.info('您选择了：' + item.text);"}
         },
         {
          "configs": {
           "itemId": "dateItem",
           "menuType": "datemenu",
           "text": "日期",
           "iconCls": "calendar_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"menuselect": "Wb.info('日期：' + Wb.dateToText(value));"}
         },
         {
          "configs": {
           "itemId": "colorItem",
           "menuType": "colormenu",
           "text": "颜色",
           "iconCls": "color_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item",
          "events": {"menuselect": "Wb.info('颜色：' + value);"}
         },
         {
          "configs": {
           "itemId": "disabledItem",
           "disabled": "true",
           "text": "禁用项"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "anyScript",
           "headerScript": "'&#160;'"
          },
          "expanded": false,
          "children": [],
          "type": "clientscript"
         }
        ],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "splitButtonItem",
         "xtype": "splitbutton",
         "tooltip": "@{text:'This is a an example QuickTip for a toolbar item', title:'Tip Title'}",
         "text": "分割按钮",
         "iconCls": "db_field_edit_icon"
        },
        "expanded": false,
        "children": [
         {
          "configs": {
           "itemId": "item1",
           "text": "<b>粗体<\/b>"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "item2",
           "text": "<span style='color:red'>红色<\/span>"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "item3",
           "text": "<u>下划线<\/u>"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         }
        ],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "cycleItem",
         "prependText": "选择",
         "xtype": "cycle",
         "showText": "true",
         "height": "80"
        },
        "expanded": false,
        "children": [
         {
          "configs": {
           "itemId": "item1",
           "checked": "true",
           "text": "循环菜单",
           "iconCls": "textarea_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "item2",
           "text": "html",
           "iconCls": "htmleditor_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         },
         {
          "configs": {
           "itemId": "item3",
           "text": "Java",
           "iconCls": "file_java_icon"
          },
          "expanded": false,
          "children": [],
          "type": "item"
         }
        ],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "buttonGroupItem",
         "text": "按钮组",
         "iconCls": "user_icon"
        },
        "expanded": false,
        "children": [{
         "configs": {
          "itemId": "buttongroup1",
          "columns": "2",
          "title": "用户选项"
         },
         "expanded": true,
         "children": [
          {
           "configs": {
            "itemId": "button1",
            "icon": "wb/images/icon32/user.png",
            "scale": "large",
            "text": "用户<br>经理"
           },
           "expanded": false,
           "children": [],
           "type": "button"
          },
          {
           "configs": {
            "itemId": "button2",
            "icon": "wb/images/icon32/add.png",
            "tooltip": "添加用户",
            "scale": "large"
           },
           "expanded": false,
           "children": [],
           "type": "button"
          },
          {
           "configs": {
            "colspan": "2",
            "itemId": "button3",
            "width": "'100%'",
            "text": "导入",
            "iconCls": "import_icon"
           },
           "expanded": false,
           "children": [],
           "type": "button"
          }
         ],
         "type": "buttongroup"
        }],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "panelItm",
         "text": "面板菜单",
         "iconCls": "panel_icon"
        },
        "expanded": false,
        "children": [{
         "configs": {
          "layout": "absolute",
          "itemId": "panel1",
          "width": "200",
          "height": "120"
         },
         "expanded": true,
         "children": [
          {
           "configs": {
            "itemId": "label1",
            "width": "144",
            "x": "32",
            "y": "24",
            "text": "菜单内可以使用任何控件",
            "height": "22"
           },
           "expanded": false,
           "children": [],
           "type": "label"
          },
          {
           "configs": {
            "itemId": "button1",
            "width": "88",
            "x": "56",
            "y": "64",
            "text": "按钮",
            "height": "22"
           },
           "expanded": false,
           "children": [],
           "type": "button"
          }
         ],
         "type": "panel"
        }],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "separator",
         "text": "-"
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "toggleItem",
         "glyph": "f1cd",
         "pressed": "true",
         "text": "切换按钮",
         "enableToggle": "true"
        },
        "expanded": false,
        "children": [],
        "type": "item",
        "events": {"toggle": "Wb.info('选择状态：' + pressed);"}
       },
       {
        "configs": {
         "itemId": "item1",
         "tooltip": "仅图标按钮",
         "iconCls": "execute_icon"
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "datetime1",
         "timeConfigs": "{minValue:'6:00'}"
        },
        "expanded": false,
        "children": [],
        "type": "datetime"
       },
       {
        "configs": {
         "itemId": "text1",
         "width": "60",
         "value": "文本框"
        },
        "expanded": false,
        "children": [],
        "type": "text"
       },
       {
        "configs": {
         "tagConfigs": " plugins: {\
\t\tptype: 'virtualkeyboard',\
\t\t//默认为true，当值为true时混淆按键排列\
\t\tconfound: true\
\t}",
         "itemId": "text11"
        },
        "expanded": false,
        "children": [],
        "type": "text"
       },
       {
        "configs": {
         "itemId": "fillItem",
         "text": "->"
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "textItem",
         "xtype": "tbtext",
         "text": "标签项"
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "clientscript1",
         "headerScript": "'任意脚本',"
        },
        "expanded": false,
        "children": [],
        "type": "clientscript"
       },
       {
        "configs": {
         "itemId": "blankItem",
         "text": " "
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "descItem",
         "text": "左侧按钮含空格"
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "item2",
         "text": "<span style='color:blue;font-weight:bold;'>自定义字体<\/span>"
        },
        "expanded": false,
        "children": [],
        "type": "item"
       },
       {
        "configs": {
         "itemId": "label1",
         "html": "<a href='333'>4444<\/a>"
        },
        "expanded": false,
        "children": [],
        "type": "label"
       }
      ],
      "type": "toolbar",
      "events": {"afterrender": "var item = app.menuItem.menu.add({\
  text: '动态添加项',\
  handler: function() {\
    Wb.info('您点击了菜单。');\
  }\
});"}
     },
     {
      "configs": {"itemId": "htmleditor1"},
      "expanded": false,
      "children": [],
      "type": "htmleditor"
     }
    ],
    "type": "panel"
   }],
   "type": "viewport"
  }],
  "type": "module",
  "events": {"initialize": "Ext.define('Ext.ux.VirtualKeyboard', {\
    extend: 'Ext.tip.ToolTip',\
    alias: 'plugin.virtualkeyboard',\
     minWidth: 332,\
     maxWidth: 332,\
    height: 114,\
    //是否混淆键盘布局\
    confound: true,\
    autoHide: false,\
    chars: {\
         \"`\":\"`\", \"1\":\"!\", \"2\":\"@\", \"3\":\"#\", \"4\":\"$\", \"5\":\"%\", \"6\":\"^\", \"7\":\"&\", \"8\":\"*\", \"9\":\"(\", \"0\":\")\",\
         \"-\":\"_\", \"=\":\"+\", \",\":\"< \", \".\":\">\", \"/\":\"?\", \";\":\":\", \"\\\"\":\"\\\"\",\"[\":\"{\", \"]\":\"}\", \"\\\\\":\"|\", \"←\":\"←\",\
         \"Shift\":\"Shift\", \"Caps Lock\":\"Caps Lock\", \"清空\":\"清空\"\
     },\
    posC: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\
    posN: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\
    keyboard: null,\
    showEvent: 'focus',\
    init: function(field) {\
        var me = this;\
        if(!Ext.isIE) {\
             me.autoWidth = true;\
         }\
        Ext.suspendLayouts();\
        me.createKeyboard();\
        me.add(me.keyboard);\
        Ext.resumeLayouts(true);\
        me.setKeyHandler(field);\
        me.mon(me, 'beforeshow', me.bulidConfound, me);\
    },\
    createKeyboard: function() {\
        this.keyboard = Ext.create('Ext.container.Container', {\
             layout: 'absolute',\
             defaults: {\
                 width: 22\
             },\
             defaultType: 'button',\
             items: [\
                { text: \"1\", x: 2, y: 3 }, { text: \"2\", x: 25, y: 3 }, { text: \"3\", x: 48, y: 3 },\
                { text: \"4\", x: 71, y: 3 }, { text: \"5\", x: 94, y: 3 }, { text: \"6\", x: 117, y: 3 },\
                { text: \"7\", x: 140, y: 3 }, { text: \"8\", x: 163, y: 3 }, { text: \"9\", x: 186, y: 3 },\
                { text: \"0\", x: 209, y: 3 }, { text: \"a\", x: 68, y: 28 }, { text: \"c\", x: 114, y: 28 },\
                { text: \"b\", x: 91, y: 28}, { text: \"d\", x: 137, y: 28 }, { text: \"e\", x: 160, y: 28 },\
                { text: \"g\", x: 206, y: 28 }, { text: \"f\", x: 183, y: 28 }, { text: \"i\", x: 252, y: 28 },\
                { text: \"j\", x: 275, y: 28 }, { text: \"h\", x: 229, y: 28 }, { text: \"k\", x: 298, y: 28 },\
                { text: \"l\", x: 68, y: 53 }, { text: \"p\", x: 160, y: 53 }, { text: \"m\", x: 91, y: 53 },\
                { text: \"n\", x: 114, y: 53 }, { text: \"o\", x: 137, y: 53 }, { text: \"r\", x: 206, y: 53 },\
                { text: \"s\", x: 229, y: 53 }, { text: \"t\", x: 252, y: 53 }, { text: \"q\", x: 183, y: 53 },\
                { text: \"u\", x: 275, y: 53 }, { text: \"v\", x: 298, y: 53 }, { text: \"w\", x: 68, y: 78 },\
                { text: \"x\", x: 45, y: 78 }, { text: \"z\", x: 114, y: 78 }, { text: \"y\", x: 91, y: 78 },\
                { text: \"=\", x: 255, y: 3 }, { text: \"-\", x: 232, y: 3 }, { text: \"`\", x: 137, y: 78 },\
                { text: \"[\", x: 252, y: 78 }, { text: \"]\", x: 275, y: 78 }, { text: \";\", x: 160, y: 78 },\
                { text: \"'\", x: 183, y: 78 }, { text: \",\", x: 206, y: 78 }, { text: \".\", x: 229, y: 78 },\
                { text: \"/\", x: 298, y: 78 }, { text: \"←\", width: 40, x: 278, y: 3 },\
                { text: \"清空\", width: 40, x: 2, y: 78 },\
                { text: \"Shift\", itemId: 'shiftBtn', enableToggle: true, width: 63, x: 2, y: 53 },\
                { text: 'Caps Lock', itemId: 'capsLockBtn', enableToggle: true, width: 63 ,x: 2, y: 28 }\
            ]\
         });\
    },\
    setKeyHandler: function(field) {\
        var me = this,\
            btns = me.keyboard.items,\
            btn, i, count;\
        for(i = 0, count = btns.length; i < count; i++) {\
            btns.get(i).on('click', function(btn, e) {\
                switch(btn.text) {\
                     case 'Caps Lock':\
                         me.onClickCapsLock(field);\
                         break;\
                     case 'Shift':\
                         me.onClickShift(field);\
                         break;\
                     case '清空':\
                         me.onClickClean(field);\
                         break;\
                     case '←':\
                         me.onClickBackspace(field);\
                         break;\
                     default:\
                         me.onClickChar(btn, field);\
                }\
            });\
        }\
         field.on(me.showEvent, function(field) {\
            var inputEl = field.inputEl,\
                inputHeight = inputEl.getHeight(),\
                x = inputEl.getX(),\
                y = inputEl.getY() + inputHeight + 2,\
                posArr = [x, y];\
            if(me.isHidden()) {\
                me.showAt(posArr);\
            }\
         }, me);\
    },\
    onClickCapsLock: function(field) {\
        var me = this,\
            capsLockBtn = me.down('container').child('#capsLockBtn'),\
            isPressed = capsLockBtn.pressed,\
            regex = /^[a-z]{1}$/i,\
            btns = me.keyboard.items,\
            btn, i, count, text;\
        for(i = 0, count = btns.length; i < count; i++) {\
            btn = btns.get(i);\
            text = btn.text;\
            if(text.match(regex)) {\
                btn.setText(isPressed ? text.toUpperCase() : text.toLowerCase());\
            }\
        }\
    },\
    onClickShift: function(field) {\
        var me = this,\
            shiftBtn = me.down('container').child('#shiftBtn'),\
            isPressed = shiftBtn.pressed,\
            regex = /^[a-z]{1}$/i,\
            btns = me.keyboard.items,\
            btn, i, count, text, temp;\
        for(i = 0, count = btns.length; i < count; i++) {\
            btn = btns.get(i);\
            text = btn.text;\
            if(text.match(regex)) {\
                btn.setText(isPressed ? text.toUpperCase() : text.toLowerCase());\
            } else {\
                temp = me.chars[text];\
                btn.setText(temp);\
                delete me.chars[text];\
                me.chars[temp] = text;\
            }\
        }\
    },\
    onClickClean: function(field) {\
        field.setValue('');\
    },\
    onClickBackspace: function(field) {\
        var oldValue = field.getValue(),\
            newValue;\
        newValue = oldValue.substring(0, oldValue.length - 1);\
        field.setValue(newValue);\
     },\
    onClickChar: function(btn, field) {\
        field.setValue(field.getValue() + btn.text);\
    },\
    bulidConfound: function() {\
        var me = this;\
        if(!me.confound) {\
            return;\
        } else {\
            var posC_ = me.posC,\
                posN_ = me.posN,\
                regexC = /^[a-zA-Z]{1}$/,\
                regexN = /^[0-9]{1}$/,\
                btns = me.keyboard.items,\
                btn, i, len, index;\
            for(i = 0, len = btns.length; i < len; i++) {\
                btn = btns.get(i);\
                if((btn.text.length == 1) && btn.text.match(regexC)) {\
                    index = me.getRandomNum(0, me.posC.length - 1);\
                    btn.setText(me.posC[index]);\
                    me.posC = me.delArrayEl(me.posC, index);\
                }\
                if((btn.text.length == 1) && btn.text.match(regexN)) {\
                    index = me.getRandomNum(0, me.posN.length - 1);\
                    btn.setText(me.posN[index]);\
                    me.posN = me.delArrayEl(me.posN, index);\
                }\
            }\
            me.posC = posC_;\
            me.posN = posN_;\
        }\
    },\
    getRandomNum: function(start, end) {\
        return Math.floor(Math.random()*(end - start + 1) + start);\
    },\
    delArrayEl: function(arr, index) {\
        if(index < 0) {\
            return arr;\
        }\
        return arr.slice(0, index).concat(arr.slice(index + 1, arr.length));  \
    }\
});"}
 }],
 "roles": {"default": 1},
 "title": "基本",
 "iconCls": "",
 "inframe": false,
 "pageLink": ""
}