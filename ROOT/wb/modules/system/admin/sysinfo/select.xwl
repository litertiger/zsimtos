{
 "hidden": false,
 "children": [{
  "configs": {
   "serverScript": "var rows = [],\
  mb = 1048576,\
  df = new java.text.DecimalFormat('#,##0'),\
  rt = java.lang.Runtime.getRuntime(),\
  props = java.lang.System.getProperties(),\
  env = java.lang.System.getenv(),\
  addr = java.net.InetAddress.getLocalHost(),\
  total = rt.totalMemory(),\
  free = rt.freeMemory();\
\
df.setRoundingMode(java.math.RoundingMode.HALF_UP);\
rows.push({\
  name: '系统重启时间',\
  value: DateUtil.format(Base.startTime)\
});\
rows.push({\
  name: '内存大小',\
  value: df.format(total / mb) + ' MB'\
});\
rows.push({\
  name: '已用内存',\
  value: df.format((total - free) / mb) + ' MB'\
});\
rows.push({\
  name: '空闲内存',\
  value: df.format(free / mb) + ' MB'\
});\
rows.push({\
  name: '最大可用内存',\
  value: df.format(rt.maxMemory() / mb) + ' MB'\
});\
rows.push({\
  name: '可用处理器个数',\
  value: df.format(rt.availableProcessors())\
});\
rows.push({\
  name: '用户名',\
  value: env.get('USERNAME')\
});\
rows.push({\
  name: '计算机名',\
  value: env.get('COMPUTERNAME')\
});\
rows.push({\
  name: '计算机域名',\
  value: env.get('USERDOMAIN')\
});\
rows.push({\
  name: '主机IP地址',\
  value: addr.getHostAddress()\
});\
rows.push({\
  name: '主机名',\
  value: addr.getHostName()\
});\
rows.push({\
  name: '操作系统名称',\
  value: props.getProperty('os.name')\
});\
rows.push({\
  name: '操作系统架构',\
  value: props.getProperty('os.arch')\
});\
rows.push({\
  name: '操作系统版本',\
  value: props.getProperty('os.version')\
});\
rows.push({\
  name: 'Java 版本',\
  value: props.getProperty('java.version')\
});\
rows.push({\
  name: 'Java 供应商',\
  value: props.getProperty('java.vendor')\
});\
rows.push({\
  name: 'Java 供应商 URL',\
  value: props.getProperty('java.vendor.url')\
});\
rows.push({\
  name: 'Java 安装路径',\
  value: props.getProperty('java.home')\
});\
rows.push({\
  name: 'Java 虚拟机规范版本',\
  value: props.getProperty('java.vm.specification.version')\
});\
rows.push({\
  name: 'Java 虚拟机规范供应商',\
  value: props.getProperty('java.vm.specification.vendor')\
});\
rows.push({\
  name: 'Java 虚拟机规范名称',\
  value: props.getProperty('java.vm.specification.name')\
});\
rows.push({\
  name: 'Java 虚拟机实现版本',\
  value: props.getProperty('java.vm.version')\
});\
rows.push({\
  name: 'Java 虚拟机实现供应商',\
  value: props.getProperty('java.vm.vendor')\
});\
rows.push({\
  name: 'Java 虚拟机实现名称',\
  value: props.getProperty('java.vm.name')\
});\
rows.push({\
  name: 'Java 运行时规范版本',\
  value: props.getProperty('java.specification.version')\
});\
rows.push({\
  name: 'Java 运行时规范供应商',\
  value: props.getProperty('java.specification.vendor')\
});\
rows.push({\
  name: 'Java 运行时规范名称',\
  value: props.getProperty('java.specification.name')\
});\
rows.push({\
  name: 'Java 类格式版本',\
  value: props.getProperty('java.class.version')\
});\
rows.push({\
  name: 'Java 类路径',\
  value: props.getProperty('java.class.path')\
});\
rows.push({\
  name: 'Java 加载库路径列表',\
  value: props.getProperty('java.library.path')\
});\
rows.push({\
  name: '文件分隔符',\
  value: Wb.encode(props.getProperty('file.separator'))\
});\
rows.push({\
  name: '路径分隔符',\
  value: Wb.encode(props.getProperty('path.separator'))\
});\
rows.push({\
  name: '行分隔符',\
  value: Wb.encode(props.getProperty('line.separator'))\
});\
rows.push({\
  name: '用户帐户名称',\
  value: props.getProperty('user.name')\
});\
rows.push({\
  name: '用户主目录',\
  value: props.getProperty('user.home')\
});\
rows.push({\
  name: '当前工作目录',\
  value: props.getProperty('user.dir')\
});\
rows.push({\
  name: '扩展目录',\
  value: props.getProperty('java.ext.dirs')\
});\
rows.push({\
  name: '临时目录',\
  value: props.getProperty('java.io.tmpdir')\
});\
app.send({\
  rows: rows\
});",
   "itemId": "module"
  },
  "expanded": false,
  "children": [],
  "type": "module"
 }],
 "roles": {},
 "title": "查询",
 "iconCls": "",
 "inframe": false,
 "pageLink": ""
}